{
    "type": [
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        2,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "\nR version 4.3.3 (2024-02-29) -- \"Angel Food Cake\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "is.null(c('haha', 'hehe', NULL))",
        "[1] FALSE\n",
        "> ",
        "bb <- c('haha', 'hehe', NULL)",
        "> ",
        "bb",
        "[1] \"haha\" \"hehe\"\n",
        "> ",
        "bb <- list('haha', 'hehe', NULL)",
        "> ",
        "bb",
        "[[1]]\n[1] \"haha\"\n\n[[2]]\n[1] \"hehe\"\n\n[[3]]\nNULL\n\n",
        "> ",
        "is.null(bb)",
        "[1] FALSE\n",
        "> ",
        "sapply(bb, is.null)",
        "[1] FALSE FALSE  TRUE\n",
        "> ",
        "devtools::load_all()",
        "\u001B[38;5;253m\u001B[36mℹ\u001B[38;5;253m Loading \u001B[34mpacu\u001B[38;5;253m\u001B[39m\n",
        "\n",
        "> ",
        "## reading the Basswood data",
        "> ",
        "raw.files <- list.files('./tests-data/basswood',",
        "+ ",
        "                        pattern = '[^all]\\\\.shp$',",
        "+ ",
        "                        recursive = TRUE,",
        "+ ",
        "                        full.names = TRUE)",
        "> ",
        "## selecting the 2012 dataset to test",
        "> ",
        "i <- 16",
        "> ",
        "cores <- 1",
        "> ",
        "raw.yield <- st_read(raw.files[i])",
        "Error in st_read(raw.files[i]) : could not find function \"st_read\"\n",
        "> ",
        "require(terra)",
        "Loading required package: terra\n",
        "terra 1.7.71\n",
        "> ",
        "require(sf)",
        "Loading required package: sf\n",
        "Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ\n8.2.1; sf_use_s2() is TRUE\n",
        "> ",
        "require(gstat)",
        "Loading required package: gstat\n",
        "> ",
        "raw.yield <- st_read(raw.files[i])",
        "Reading layer `2012-basswood' from data source `/home/caio/Dropbox/pacu/tests-data/basswood/2012-basswood.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 4240 features and 27 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -93.2772 ymin: 41.53713 xmax: -93.27107 ymax: 41.54056\nCRS:           NA\n",
        "> ",
        "raw.yield |> names()",
        " [1] \"ID\"         \"LONGITUDE\" \n [3] \"LATITUDE\"   \"FLOW\"      \n [5] \"TIME\"       \"CYCLES\"    \n [7] \"DISTANCE\"   \"SWATH\"     \n [9] \"MOISTURE\"   \"STATUS\"    \n[11] \"PASS\"       \"SERIAL\"    \n[13] \"FIELD\"      \"LOAD\"      \n[15] \"CROP\"       \"GPS\"       \n[17] \"PDOP\"       \"ALTITUDE\"  \n[19] \"DRY_BU_AC\"  \"DAY\"       \n[21] \"MONTH\"      \"DAYOFMONTH\"\n[23] \"HOUR\"       \"MINUTE\"    \n[25] \"SECOND\"     \"TIMELAPSE\" \n[27] \"SPEED\"      \"geometry\"  \n",
        "> ",
        "raw.yield[-7]",
        "Simple feature collection with 4240 features and 26 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -93.2772 ymin: 41.53713 xmax: -93.27107 ymax: 41.54056\nCRS:           NA\nFirst 10 features:\n   ID LONGITUDE LATITUDE  FLOW\n1   0 -93.27720 41.53713  2.70\n2   1 -93.27717 41.53713  5.79\n3   2 -93.27715 41.53714  5.86\n4   3 -93.27714 41.53714  6.81\n5   4 -93.27711 41.53714  8.59\n6   5 -93.27708 41.53714 13.34\n7   6 -93.27705 41.53714 15.41\n8   7 -93.27701 41.53714 13.94\n9   8 -93.27697 41.53714",
        " 13.87\n10  9 -93.27693 41.53715 14.37\n         TIME CYCLES SWATH MOISTURE\n1  1347998285      3   240     15.0\n2  1347998288      3   240     15.0\n3  1347998289      1   240     15.0\n4  1347998292      3   240     15.0\n5  1347998295      3   240     15.0\n6  1347998298      3   240     15.0\n7  1347998301      3   240     11.4\n8  1347998304      3   240     17.1\n9  1347998307      3   240     16.5\n10 1347998309      2   240     16.4\n   STATUS PASS     SERIAL          FIELD\n1      33    1 2007713498 \"F0:BASSWOODD\"",
        "\n2      33    1 2007713498 \"F0:BASSWOODD\"\n3      33    1 2007713498 \"F0:BASSWOODD\"\n4      33    1 2007713498 \"F0:BASSWOODD\"\n5      33    1 2007713498 \"F0:BASSWOODD\"\n6      33    1 2007713498 \"F0:BASSWOODD\"\n7      33    1 2007713498 \"F0:BASSWOODD\"\n8      33    1 2007713498 \"F0:BASSWOODD\"\n9      33    1 2007713498 \"F0:BASSWOODD\"\n10     33    1 2007713498 \"F0:BASSWOODD\"\n                     LOAD   CROP GPS\n1  \"L0:12/09/18-19:52:15\" \"CORN\"   7\n2  \"L0:12/09/18-19:52:15\" \"CORN\"   7\n3  \"L0:12/09/18-19:52:15\" \"CORN\"",
        "   7\n4  \"L0:12/09/18-19:52:15\" \"CORN\"   7\n5  \"L0:12/09/18-19:52:15\" \"CORN\"   7\n6  \"L0:12/09/18-19:52:15\" \"CORN\"   7\n7  \"L0:12/09/18-19:52:15\" \"CORN\"   7\n8  \"L0:12/09/18-19:52:15\" \"CORN\"   7\n9  \"L0:12/09/18-19:52:15\" \"CORN\"   7\n10 \"L0:12/09/18-19:52:15\" \"CORN\"   7\n   PDOP ALTITUDE DRY_BU_AC     DAY\n1     0    896.2   51.0863 Tuesday\n2     0    895.1   88.1177 Tuesday\n3     0    894.5   91.1649 Tuesday\n4     0    894.4  107.1345 Tuesday\n5     0    894.0  136.6730 Tuesday\n6     0    893.6  184.9298 Tuesday\n7     0",
        "    893.2  171.2397 Tuesday\n8     0    892.8  150.7750 Tuesday\n9     0    892.3  148.7609 Tuesday\n10    0    891.5  154.3082 Tuesday\n       MONTH DAYOFMONTH HOUR MINUTE\n1  September         18   14     58\n2  September         18   14     58\n3  September         18   14     58\n4  September         18   14     58\n5  September         18   14     58\n6  September         18   14     58\n7  September         18   14     58\n8  September         18   14     58\n9  September         18   14     58\n10 September         18",
        "   14     58\n   SECOND TIMELAPSE SPEED\n1       5         0  1.40\n2       8         3  1.74\n3       9         1  1.70\n4      12         3  1.69\n5      15         3  1.67\n6      18         3  1.91\n7      21         3  2.39\n8      24         3  2.41\n9      27         3  2.44\n10     29         2  2.44\n                     geometry\n1   POINT (-93.2772 41.53713)\n2  POINT (-93.27717 41.53713)\n3  POINT (-93.27715 41.53714)\n4  POINT (-93.27714 41.53714)\n5  POINT (-93.27711 41.53714)\n6  POINT (-93.27708 41.53714)\n7  POINT (-93.27705 41.53714)",
        "\n8  POINT (-93.27701 41.53714)\n9  POINT (-93.27697 41.53714)\n10 POINT (-93.27693 41.53715)\n",
        "> ",
        "raw.yield[-7] |> names()",
        " [1] \"ID\"         \"LONGITUDE\" \n [3] \"LATITUDE\"   \"FLOW\"      \n [5] \"TIME\"       \"CYCLES\"    \n [7] \"SWATH\"      \"MOISTURE\"  \n [9] \"STATUS\"     \"PASS\"      \n[11] \"SERIAL\"     \"FIELD\"     \n[13] \"LOAD\"       \"CROP\"      \n[15] \"GPS\"        \"PDOP\"      \n[17] \"ALTITUDE\"   \"DRY_BU_AC\" \n[19] \"DAY\"        \"MONTH\"     \n[21] \"DAYOFMONTH\" \"HOUR\"      \n[23] \"MINUTE\"     \"SECOND\"    \n[25] \"TIMELAPSE\"  \"SPEED\"     \n[27] \"geometry\"  \n",
        "> ",
        "raw.yield |> names()",
        " [1] \"ID\"         \"LONGITUDE\" \n [3] \"LATITUDE\"   \"FLOW\"      \n [5] \"TIME\"       \"CYCLES\"    \n [7] \"DISTANCE\"   \"SWATH\"     \n [9] \"MOISTURE\"   \"STATUS\"    \n[11] \"PASS\"       \"SERIAL\"    \n[13] \"FIELD\"      \"LOAD\"      \n[15] \"CROP\"       \"GPS\"       \n[17] \"PDOP\"       \"ALTITUDE\"  \n[19] \"DRY_BU_AC\"  \"DAY\"       \n[21] \"MONTH\"      \"DAYOFMONTH\"\n[23] \"HOUR\"       \"MINUTE\"    \n[25] \"SECOND\"     \"TIMELAPSE\" \n[27] \"SPEED\"      \"geometry\"  \n",
        "> ",
        "unsp.units <- pa_yield_map(raw.yield = raw.yield[-7],",
        "+ ",
        "                       algorithm = 'ritas',",
        "+ ",
        "                       cores = cores,",
        "+ ",
        "                       verbose = TRUE)",
        "No CRS found. Defaulting to EPSG:4326\nTransforming CRS to EPSG:32615\nGuessing units of crop_flow to be lb/s \nGuessing units of moisture to be % \nGuessing units of interval to be s \nTrajectory angle not found. Estimating it from geographical coordinates.\nGuessing units of width to be in \n",
        "Error in which(not.found) : argument to 'which' is not logical\n",
        "In addition: ",
        "Warning messages:\n",
        "1: ",
        "In .pa_get_variable(raw.yield, \"angle\", data.units[\"angle\"], data.columns[\"angle\"],  :",
        "\n ",
        " Unable to find the column for angle\n\n",
        "2: ",
        "In .pa_get_variable(raw.yield, \"distance\", data.units[\"distance\"],  :",
        "\n ",
        " Unable to find the column for distance\n\n",
        "3: ",
        "In any(not.found) :",
        " coercing argument of type 'list' to logical\n",
        "> ",
        "devtools::load_all()",
        "\u001B[38;5;253m\u001B[36mℹ\u001B[38;5;253m Loading \u001B[34mpacu\u001B[38;5;253m\u001B[39m\n",
        "\n",
        "> ",
        "unsp.units <- pa_yield_map(raw.yield = raw.yield[-7],",
        "+ ",
        "                       algorithm = 'ritas',",
        "+ ",
        "                       cores = cores,",
        "+ ",
        "                       verbose = TRUE)",
        "No CRS found. Defaulting to EPSG:4326\nTransforming CRS to EPSG:32615\nGuessing units of crop_flow to be lb/s \nGuessing units of moisture to be % \nGuessing units of interval to be s \nTrajectory angle not found. Estimating it from geographical coordinates.\nGuessing units of width to be in \n",
        "Error in pa_yield_map(raw.yield = raw.yield[-7], algorithm = \"ritas\",  : \n  Unable to find column(s): distance\n",
        "In addition: ",
        "Warning messages:\n",
        "1: ",
        "In .pa_get_variable(raw.yield, \"angle\", data.units[\"angle\"], data.columns[\"angle\"],  :",
        "\n ",
        " Unable to find the column for angle\n\n",
        "2: ",
        "In .pa_get_variable(raw.yield, \"distance\", data.units[\"distance\"],  :",
        "\n ",
        " Unable to find the column for distance\n\n",
        "3: ",
        "In any(not.found) :",
        " coercing argument of type 'list' to logical\n",
        "> ",
        "raw.yield |> names()",
        " [1] \"ID\"         \"LONGITUDE\"  \"LATITUDE\"  \n [4] \"FLOW\"       \"TIME\"       \"CYCLES\"    \n [7] \"DISTANCE\"   \"SWATH\"      \"MOISTURE\"  \n[10] \"STATUS\"     \"PASS\"       \"SERIAL\"    \n[13] \"FIELD\"      \"LOAD\"       \"CROP\"      \n[16] \"GPS\"        \"PDOP\"       \"ALTITUDE\"  \n[19] \"DRY_BU_AC\"  \"DAY\"        \"MONTH\"     \n[22] \"DAYOFMONTH\" \"HOUR\"       \"MINUTE\"    \n[25] \"SECOND\"     \"TIMELAPSE\"  \"SPEED\"     \n[28] \"geometry\"  \n",
        "> ",
        "unsp.units <- pa_yield_map(raw.yield = raw.yield[-7:-8],",
        "+ ",
        "                       algorithm = 'ritas',",
        "+ ",
        "                       cores = cores,",
        "+ ",
        "                       verbose = TRUE)",
        "No CRS found. Defaulting to EPSG:4326\nTransforming CRS to EPSG:32615\nGuessing units of crop_flow to be lb/s \nGuessing units of moisture to be % \nGuessing units of interval to be s \nTrajectory angle not found. Estimating it from geographical coordinates.\n",
        "Error in pa_yield_map(raw.yield = raw.yield[-7:-8], algorithm = \"ritas\",  : \n  Unable to find column(s): width, distance\n",
        "In addition: ",
        "Warning messages:\n",
        "1: ",
        "In .pa_get_variable(raw.yield, \"angle\", data.units[\"angle\"], data.columns[\"angle\"],  :",
        "\n ",
        " Unable to find the column for angle\n\n",
        "2: ",
        "In .pa_get_variable(raw.yield, \"width\", data.units[\"width\"], data.columns[\"width\"],  :",
        "\n ",
        " Unable to find the column for width\n\n",
        "3: ",
        "In .pa_get_variable(raw.yield, \"distance\", data.units[\"distance\"],  :",
        "\n ",
        " Unable to find the column for distance\n\n",
        "4: ",
        "In any(not.found) :",
        " coercing argument of type 'list' to logical\n",
        "> ",
        "unsp.units <- pa_yield_map(raw.yield = raw.yield[-7:-8],",
        "+ ",
        "                       algorithm = 'ritas',",
        "+ ",
        "                       cores = cores,",
        "+ ",
        "                       verbose = FALSE)",
        "No CRS found. Defaulting to EPSG:4326\n",
        "Error in pa_yield_map(raw.yield = raw.yield[-7:-8], algorithm = \"ritas\",  : \n  Unable to find column(s): width, distance\n",
        "In addition: ",
        "Warning message:\n",
        "In any(not.found) :",
        " coercing argument of type 'list' to logical\n",
        "> ",
        "devtools::load_all()",
        "\u001B[38;5;253m\u001B[36mℹ\u001B[38;5;253m Loading \u001B[34mpacu\u001B[38;5;253m\u001B[39m\n",
        "\n",
        "> ",
        "unsp.units <- pa_yield_map(raw.yield = raw.yield[-7:-8],",
        "+ ",
        "                       algorithm = 'ritas',",
        "+ ",
        "                       cores = cores,",
        "+ ",
        "                       verbose = FALSE)",
        "No CRS found. Defaulting to EPSG:4326\n",
        "Error in pa_yield_map(raw.yield = raw.yield[-7:-8], algorithm = \"ritas\",  : \n  Unable to find column(s): width, distance\n",
        "> ",
        "unsp.units <- pa_yield_map(raw.yield = raw.yield[-7:-8],",
        "+ ",
        "                       algorithm = 'ritas',",
        "+ ",
        "                       cores = cores,",
        "+ ",
        "                       verbose = TRUE)",
        "No CRS found. Defaulting to EPSG:4326\nTransforming CRS to EPSG:32615\nGuessing units of crop_flow to be lb/s \nGuessing units of moisture to be % \nGuessing units of interval to be s \nTrajectory angle not found. Estimating it from geographical coordinates.\n",
        "Error in pa_yield_map(raw.yield = raw.yield[-7:-8], algorithm = \"ritas\",  : \n  Unable to find column(s): width, distance\n",
        "In addition: ",
        "Warning messages:\n",
        "1: ",
        "In .pa_get_variable(raw.yield, \"angle\", data.units[\"angle\"], data.columns[\"angle\"],  :",
        "\n ",
        " Unable to find the column for angle\n\n",
        "2: ",
        "In .pa_get_variable(raw.yield, \"width\", data.units[\"width\"], data.columns[\"width\"],  :",
        "\n ",
        " Unable to find the column for width\n\n",
        "3: ",
        "In .pa_get_variable(raw.yield, \"distance\", data.units[\"distance\"],  :",
        "\n ",
        " Unable to find the column for distance\n\n",
        "> ",
        "require(terra)",
        "> ",
        "require(sf)",
        "> ",
        "require(gstat)",
        "> ",
        "  raw.yield <- st_read('./inst/extdata/to-delete/raw-yield.shp')",
        "Reading layer `raw-yield' from data source `/home/caio/Dropbox/pacu/inst/extdata/to-delete/raw-yield.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 67466 features and 26 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.31001 ymin: 41.26623 xmax: -90.29597 ymax: 41.27335\nGeodetic CRS:  WGS 84\n",
        "> ",
        "  app.n <- st_read('./inst/extdata/to-delete/as-applied-n.shp')",
        "Reading layer `as-applied-n' from data source `/home/caio/Dropbox/pacu/inst/extdata/to-delete/as-applied-n.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 30175 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.30985 ymin: 41.26633 xmax: -90.29608 ymax: 41.27329\nGeodetic CRS:  WGS 84\n",
        "> ",
        "  app.s <- st_read('./inst/extdata/to-delete/as-applied-s.shp')",
        "Reading layer `as-applied-s' from data source `/home/caio/Dropbox/pacu/inst/extdata/to-delete/as-applied-s.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 17919 features and 27 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.30992 ymin: 41.26626 xmax: -90.29602 ymax: 41.27332\nGeodetic CRS:  WGS 84\n",
        "> ",
        "  app.n |> names()",
        " [1] \"Field\"        \"Dataset\"     \n [3] \"Product\"      \"Obj__Id\"     \n [5] \"Distance_f\"   \"Duration_s\"  \n [7] \"Swth_Wdth_\"   \"Rt_Apd_Ms_\"  \n [9] \"Tgt_Rate_l\"   \"Speed_mph_\"  \n[11] \"Prod_ac_h_\"   \"Prdt_Amt\"    \n[13] \"Rate__Mass\"   \"Rate__Mass.1\"\n[15] \"geometry\"    \n",
        "> ",
        "  app.n |> head()",
        "Simple feature collection with 6 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.30083 ymin: 41.27314 xmax: -90.30083 ymax: 41.27316\nGeodetic CRS:  WGS 84\n       Field\n1 Wirth Farm\n2 Wirth Farm\n3 Wirth Farm\n4 Wirth Farm\n5 Wirth Farm\n6 Wirth Farm\n                            Dataset\n1 2020_43021613_AsAppliedVRUrea.shp\n2 2020_43021613_AsAppliedVRUrea.shp\n3 2020_43021613_AsAppliedVRUrea.shp\n4 2020_43021613_AsAppliedVRUrea.shp\n5 2020_43021613_AsAppliedVRUrea.shp\n6 2020_43021613_AsAppliedVRUrea.shp",
        "\n  Product Obj__Id Distance_f Duration_s\n1    Urea       1     1.4013        0.2\n2    Urea       2     1.4013        0.2\n3    Urea       3     1.4670        0.2\n4    Urea       4     1.5326        0.2\n5    Urea       5     1.5326        0.2\n6    Urea       6     1.5982        0.2\n  Swth_Wdth_ Rt_Apd_Ms_ Tgt_Rate_l\n1         80     0.0000   219.5709\n2         80    10.2628   219.5709\n3         80   128.9918   219.5709\n4         80   171.2437   219.5709\n5         80   189.2542   219.5709\n6         80   182.2783",
        "   219.5709\n  Speed_mph_ Prod_ac_h_ Prdt_Amt\n1     4.7772    46.3238    0e+00\n2     4.7772    46.3238    0e+00\n3     5.0011    48.4957    2e-04\n4     5.2248    50.6643    2e-04\n5     5.2248    50.6643    3e-04\n6     5.4484    52.8328    3e-04\n  Rate__Mass Rate__Mass.1\n1     0.0000       0.0000\n2     4.7209       5.5419\n3    59.3362      69.6556\n4    78.7721      92.4716\n5    87.0569     102.1973\n6    83.8480      98.4303\n                    geometry\n1 POINT (-90.30083 41.27316)\n2 POINT (-90.30083 41.27315)\n3",
        " POINT (-90.30083 41.27315)\n4 POINT (-90.30083 41.27315)\n5 POINT (-90.30083 41.27314)\n6 POINT (-90.30083 41.27314)\n",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  flow <- app.n[['Rate_Mass']]",
        "> ",
        "  interval <- app.n[['Duration_s']]",
        "> ",
        "  pa_flow2mass(flow, interval, moisture)",
        "Error: object 'moisture' not found\n",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  flow <- app.n[['Rate_Mass']]",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  flow <- app.n[['Rate_Mass']]",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  flow <- app.n[['Rate_Mass']]",
        "> ",
        "  moisture <- 0",
        "> ",
        "  interval <- app.n[['Duration_s']]",
        "> ",
        "  pa_flow2mass(flow, interval, moisture)",
        "Error in Ops.units(max.moisture, moisture) : \n  both operands of the expression should be \"units\" objects\n",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  flow <- app.n[['Rate_Mass']]",
        "> ",
        "app.n[['Rate_Mass']]",
        "NULL\n",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  flow <- app.n[['Rate_Mass']]",
        "> ",
        "flow",
        "NULL\n",
        "> ",
        "app.n",
        "Simple feature collection with 30175 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.30985 ymin: 41.26633 xmax: -90.29608 ymax: 41.27329\nGeodetic CRS:  WGS 84\nFirst 10 features:\n        Field\n1  Wirth Farm\n2  Wirth Farm\n3  Wirth Farm\n4  Wirth Farm\n5  Wirth Farm\n6  Wirth Farm\n7  Wirth Farm\n8  Wirth Farm\n9  Wirth Farm\n10 Wirth Farm\n                             Dataset\n1  2020_43021613_AsAppliedVRUrea.shp\n2  2020_43021613_AsAppliedVRUrea.shp\n3  2020_43021613_AsAppliedVRUrea.shp",
        "\n4  2020_43021613_AsAppliedVRUrea.shp\n5  2020_43021613_AsAppliedVRUrea.shp\n6  2020_43021613_AsAppliedVRUrea.shp\n7  2020_43021613_AsAppliedVRUrea.shp\n8  2020_43021613_AsAppliedVRUrea.shp\n9  2020_43021613_AsAppliedVRUrea.shp\n10 2020_43021613_AsAppliedVRUrea.shp\n   Product Obj__Id Distance_f Duration_s\n1     Urea       1     1.4013        0.2\n2     Urea       2     1.4013        0.2\n3     Urea       3     1.4670        0.2\n4     Urea       4     1.5326        0.2\n5     Urea       5     1.5326        0.2\n6     Urea",
        "       6     1.5982        0.2\n7     Urea       7     1.6966        0.2\n8     Urea       8     1.7294        0.2\n9     Urea       9     1.7622        0.2\n10    Urea      10     1.8278        0.2\n   Swth_Wdth_ Rt_Apd_Ms_ Tgt_Rate_l\n1          80     0.0000   219.5709\n2          80    10.2628   219.5709\n3          80   128.9918   219.5709\n4          80   171.2437   219.5709\n5          80   189.2542   219.5709\n6          80   182.2783   219.5709\n7          80   172.5651   219.5709\n8          80   174.4770   219.5709",
        "\n9          80   186.9693   219.5709\n10         80   182.4924   219.5709\n   Speed_mph_ Prod_ac_h_ Prdt_Amt\n1      4.7772    46.3238    0e+00\n2      4.7772    46.3238    0e+00\n3      5.0011    48.4957    2e-04\n4      5.2248    50.6643    2e-04\n5      5.2248    50.6643    3e-04\n6      5.4484    52.8328    3e-04\n7      5.7839    56.0857    3e-04\n8      5.8957    57.1700    3e-04\n9      6.0075    58.2543    3e-04\n10     6.2311    60.4229    3e-04\n   Rate__Mass Rate__Mass.1\n1      0.0000       0.0000\n2      4.7209",
        "       5.5419\n3     59.3362      69.6556\n4     78.7721      92.4716\n5     87.0569     102.1973\n6     83.8480      98.4303\n7     79.3799      93.1852\n8     80.2594      94.2176\n9     86.0059     100.9634\n10    83.9465      98.5459\n                     geometry\n1  POINT (-90.30083 41.27316)\n2  POINT (-90.30083 41.27315)\n3  POINT (-90.30083 41.27315)\n4  POINT (-90.30083 41.27315)\n5  POINT (-90.30083 41.27314)\n6  POINT (-90.30083 41.27314)\n7  POINT (-90.30083 41.27313)\n8  POINT (-90.30083 41.27313)\n9  POINT (-90.30082 41.27312)",
        "\n10 POINT (-90.30082 41.27312)\n",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  flow <- app.n[['Rate__Mass']]",
        "> ",
        "  moisture <- 0",
        "> ",
        "  interval <- app.n[['Duration_s']]",
        "> ",
        "  pa_flow2mass(flow, interval, moisture)",
        "Error in Ops.units(max.moisture, moisture) : \n  both operands of the expression should be \"units\" objects\n",
        "> ",
        "plot(density(app.n$Rate__Mass))",
        "> ",
        "  units(flow) <- units::as_units('lb/s')",
        "> ",
        "  units(interval) <- units::as_units('s')",
        "> ",
        "  pa_flow2mass(flow, interval, moisture)",
        "Error in Ops.units(max.moisture, moisture) : \n  both operands of the expression should be \"units\" objects\n",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  flow <- app.n[['Rate__Mass']]",
        "> ",
        "  units(flow) <- units::as_units('lb/s')",
        "> ",
        "  moisture <- 0",
        "> ",
        "  units(moisture) <- units::as_units('%')",
        "> ",
        "  interval <- app.n[['Duration_s']]",
        "> ",
        "  units(interval) <- units::as_units('s')",
        "> ",
        "  pa_flow2mass(flow, interval, moisture)",
        "Units: [lb]\n   [1]  0.00000  0.94418 11.86724\n   [4] 15.75442 17.41138 16.76960\n   [7] 15.87598 16.05188 17.20118\n  [10] 16.78930 17.54854 20.88474\n  [13] 19.45858 19.15768 19.10654\n  [16] 18.19454 17.55242 21.24578\n  [19] 22.03112 19.90136 19.51320\n  [22] 20.95504 21.51088 19.70306\n  [25] 19.74368 20.48784 19.58552\n  [28] 19.95850 20.30570 20.03656\n  [31] 19.85958 20.06454 21.07742\n  [34] 20.59248 20.14596 20.77340\n  [37] 21.08292 21.21498 20.45878\n  [40] 20.47700 21.04320 20.76534\n  [43] 20.26696 20.24808",
        " 19.77628\n  [46] 19.85138 18.97632 19.03164\n  [49] 18.70208 18.87462 18.06488\n  [52] 17.20042 17.14436 17.27404\n  [55] 19.42710 19.25294 19.24842\n  [58] 18.78252 19.08630 19.52192\n  [61] 19.90162 19.27476 19.27074\n  [64] 19.75666 20.96012 20.56984\n  [67] 20.63114 20.90514 21.06470\n  [70] 21.43456 20.92640 20.70978\n  [73] 20.92254 20.83800 20.92492\n  [76] 20.96694 20.93394 20.79358\n  [79] 20.99206 20.98640 20.95324\n  [82] 20.49472 20.90768 21.07382\n  [85] 21.44540 21.12610 20.96424\n  [88] 21.26334 21.57532 21.46698",
        "\n  [91] 21.31956 21.42002 21.71922\n  [94] 21.53272 21.18158 21.04722\n  [97] 20.79966 21.08916 21.01626\n [100] 20.68722 21.44350 21.58008\n [103] 21.49594 21.49250 21.46558\n [106] 21.37686 21.71528 21.64592\n [109] 21.47132 21.18790 21.64066\n [112] 21.55504 21.68532 21.47674\n [115] 21.42536 21.54988 22.01388\n [118] 22.15966 21.83946 21.51558\n [121] 21.48636 21.50926 21.30594\n [124] 21.26718 21.35182 21.15096\n [127] 21.36182 21.30882 21.38932\n [130] 21.59058 21.64796 21.64336\n [133] 22.11418 21.89576 21.33384\n [136]",
        " 21.21836 21.60774 21.63254\n [139] 22.18142 22.78962 23.41984\n [142] 23.98826 24.65992 25.42262\n [145] 25.72352 26.75192 27.53192\n [148] 27.19310 26.74378 27.07498\n [151] 25.91002 24.76744 21.91034\n [154] 21.23744 20.28488 19.90076\n [157] 19.99696 20.46966 20.52022\n [160] 20.78854 21.35784 21.77506\n [163] 21.65178 21.25524 21.09544\n [166] 21.12826 20.67510 20.87694\n [169] 21.73854 21.41908 22.11512\n [172] 22.96040 22.86674 22.32296\n [175] 21.27930 21.97862 22.27888\n [178] 21.97018 22.20032 23.97326\n [181] 23.65750",
        " 22.78622 23.11798\n [184] 24.11732 24.09418 23.02122\n [187] 21.86322 20.11908 19.71204\n [190] 20.21718 19.42444 19.51718\n [193] 19.29320 19.62758 19.48148\n [196] 19.67446 20.16358 20.53524\n [199] 20.15298 20.63112 20.47574\n [202] 20.39062 19.43692 20.35130\n [205] 20.46170 20.29490 20.43650\n [208] 19.99080 20.19740 19.82664\n [211] 19.43190 18.89962 19.25100\n [214] 19.52038 19.34736 19.33816\n [217] 19.08734 19.01198 20.25870\n [220] 20.14354 19.90412 18.38044\n [223] 19.04120 18.72994 18.74480\n [226] 19.82532 20.83926",
        " 21.13212\n [229] 21.23850 21.06744 20.99736\n [232] 21.15790 21.36992 20.80840\n [235] 21.32034 21.60902 22.16618\n [238] 21.45668 21.37902 21.65048\n [241] 21.81142 22.09444 22.35604\n [244] 22.18432 22.66852 23.01588\n [247] 23.89480 24.11584 23.72334\n [250] 24.77972 24.57460 25.37480\n [253] 25.88666 25.72028 26.44112\n [256] 26.58706 25.76484 25.34534\n [259] 22.48502 22.14612 22.43486\n [262] 24.05826 24.78976 25.25196\n [265] 22.76360 23.97248 23.65336\n [268] 21.43726 19.05626 19.81862\n [271] 20.75484 18.66062 19.18176",
        "\n [274] 20.02414 20.14924 19.61144\n [277] 19.90546 20.87910 20.35190\n [280] 20.21154 20.28590 20.14728\n [283] 20.29018 20.59954 20.66176\n [286] 21.08628 20.85858 21.10418\n [289] 21.43364 21.17034 20.95142\n [292] 21.37266 21.17418 20.85226\n [295] 20.93468 21.09926 21.11648\n [298] 20.92680 20.82518 21.27776\n [301] 20.46994 20.89396 21.33736\n [304] 20.83668 20.71692 20.71396\n [307] 20.38408 20.98344 20.65232\n [310] 20.58214 20.55522 20.25448\n [313] 20.38112 20.94370 20.75984\n [316] 20.87936 21.12536 20.78036\n [319]",
        " 20.58140 20.42406 20.28320\n [322] 20.48282 20.47116 20.08686\n [325] 20.55398 21.26990 21.92154\n [328] 21.98122 21.89936 21.49192\n [331] 21.46976 21.22344 20.47946\n [334] 20.33910 20.17576 20.41364\n [337] 19.88330 19.92492 19.86458\n [340] 19.88938 20.08316 19.86598\n [343] 20.02440 20.25152 19.98122\n [346] 19.43546 20.50432 20.51344\n [349] 19.85210 20.58936 20.91620\n [352] 20.77100 20.80524 20.64026\n [355] 20.83700 20.91038 20.92696\n [358] 20.87262 20.67636 20.71848\n [361] 20.91974 21.18306 21.05230\n [364] 21.23378",
        " 21.01496 20.58230\n [367] 20.66226 21.00888 21.00150\n [370] 20.67218 20.46994 20.55900\n [373] 20.70796 20.59470 20.79480\n [376] 20.95914 20.81772 21.07176\n [379] 21.09834 20.93574 20.68548\n [382] 21.22312 21.04228 21.11624\n [385] 20.93664 20.99024 20.96118\n [388] 21.21162 21.09744 21.12256\n [391] 21.05780 20.85146 20.88790\n [394] 20.70190 21.05854 21.36946\n [397] 21.31306 20.90800 21.20284\n [400] 21.25766 21.02414 21.10352\n [403] 20.98942 21.03292 21.54042\n [406] 21.42560 21.38842 21.37052\n [409] 21.96274 21.65896",
        " 22.30312\n [412] 22.28400 22.58696 22.99654\n [415] 23.13378 22.99900 23.36674\n [418] 23.89796 23.83180 22.95222\n [421] 20.98236 20.84054 21.01232\n [424] 21.22738 20.67160 21.01192\n [427] 21.05198 20.93756 20.74630\n [430] 20.50368 21.06822 21.13652\n [433] 21.35000 20.48954 20.44038\n [436] 20.49424 20.58140 20.00568\n [439] 19.85934 20.43020 20.08670\n [442] 19.73744 19.87870 20.68294\n [445] 20.62926 20.22656 20.41058\n [448] 20.31366 20.48570 20.93624\n [451] 20.93574 20.74572 20.71322\n [454] 20.32374 20.57130 20.29206",
        "\n [457] 20.48078 20.18766 20.00988\n [460] 20.21022 20.44268 20.79226\n [463] 20.46920 21.61734 21.12518\n [466] 20.97670 21.05780 21.03786\n [469] 21.11354 21.37808 21.23500\n [472] 21.67274 21.49766 21.62588\n [475] 21.43692 21.64468 21.40772\n [478] 21.30914 21.49496 21.27868\n [481] 21.50258 21.46762 21.64370\n [484] 21.47798 21.19126 21.20456\n [487] 21.06600 21.35772 21.16162\n [490] 21.02670 20.79062 20.80802\n [493] 21.37020 21.27916 21.12856\n [496] 21.23214 20.98114 21.33096\n [499] 21.03638 21.02168 21.25898\n [502]",
        " 21.76370 21.45590 21.32636\n [505] 21.49626 21.63860 21.35600\n [508] 20.69016 20.31504 20.69550\n [511] 21.45048 21.90290 21.70164\n [514] 21.11928 21.15490 21.41624\n [517] 21.49816 21.15326 20.94444\n [520] 20.87056 20.88010 20.63942\n [523] 20.52624 20.89946 20.57558\n [526] 20.89462 20.97646 21.32218\n [529] 21.22048 21.40328 21.22344\n [532] 20.61604 20.49112 20.61020\n [535] 20.52000 20.76698 20.58912\n [538] 20.27254 20.43850 20.71634\n [541] 20.71988 20.48422 20.91202\n [544] 21.67850 21.89470 21.53550\n [547] 21.43750",
        " 21.47994 21.28746\n [550] 21.88886 21.97366 21.47534\n [553] 21.46000 21.26316 21.17090\n [556] 21.34426 21.07052 21.28188\n [559] 20.97070 21.36084 21.51884\n [562] 21.94534 21.64122 21.13946\n [565] 21.67348 21.74818 21.32168\n [568] 21.28852 21.06420 21.54092\n [571] 21.63802 22.02642 21.89896\n [574] 21.46780 21.19462 21.40738\n [577] 21.45188 21.84290 21.83404\n [580] 21.71486 21.76452 22.07428\n [583] 22.44898 23.28842 23.54568\n [586] 24.18968 24.38634 25.00646\n [589] 25.06178 24.76792 24.60770\n [592] 24.03274 24.14248",
        " 23.96510\n [595] 24.12392 24.16292 23.08430\n [598] 21.95994 20.31612 20.37464\n [601] 20.21410 19.96440 19.60348\n [604] 20.62712 20.52960 19.87264\n [607] 20.94206 20.93016 21.77420\n [610] 21.86752 21.28812 21.55242\n [613] 21.73784 22.24410 24.02174\n [616] 24.17604 24.28710  2.67868\n [619]  2.67868  2.67868  2.67868\n [622]  2.67868  2.67868  2.67868\n [625]  2.67868  2.67868 18.24330\n [628] 15.43118 20.09250 19.75688\n [631] 18.51910 19.85816 22.00836\n [634] 21.15964 19.19018 17.52082\n [637] 19.91718 19.48658 18.95274",
        "\n [640] 19.25710 18.93270 17.69460\n [643] 19.32398 19.55472 19.29936\n [646] 20.56752 19.22778 19.36132\n [649] 21.80036 21.65262 22.62740\n [652] 22.75964 22.64842 22.64966\n [655] 23.15134 23.35300 23.65556\n [658] 23.57742 23.11292 23.34784\n [661] 20.66938 19.83346 19.66914\n [664] 18.61030 19.18706 19.42454\n [667] 19.04786 20.17796 19.39228\n [670] 18.36782 19.03416 18.62466\n [673] 17.80450 18.49874 17.06660\n [676] 18.30774 19.30370 17.77020\n [679] 17.86894 17.58436 17.36348\n [682] 17.99156 16.76010 17.51468\n [685]",
        " 19.76238 19.32464 18.05730\n [688] 19.46606 19.57942 20.86882\n [691] 20.91454 19.92834 21.47648\n [694] 21.66050 21.58178 21.56348\n [697] 21.72098 21.73470 21.66148\n [700] 21.48188 21.69578 21.70778\n [703] 21.74152 21.87234 21.73306\n [706] 21.76318 21.78986 21.65632\n [709] 21.69186 21.92512 21.63966\n [712] 21.82080 21.46950 21.35524\n [715] 21.70170 21.31140 21.48476\n [718] 21.26922 21.18920 21.39710\n [721] 21.54214 21.38676 21.36352\n [724] 21.22786 21.26494 21.34514\n [727] 20.96404 20.89722 20.90790\n [730] 21.00410",
        " 20.97710 21.07722\n [733] 21.15298 21.12090 21.30886\n [736] 21.30640 21.43166 21.48434\n [739] 21.45842 21.57906 21.39768\n [742] 21.28112 21.33898 21.15850\n [745] 21.58350 21.67486 21.71074\n [748] 21.12608 21.02888 21.58432\n [751] 21.70154 21.51948 21.19026\n [754] 21.53540 21.22998 21.33340\n [757] 21.22350 21.27258 21.50560\n [760] 21.19502 21.08422 21.26258\n [763] 21.30738 21.37166 21.38052\n [766] 21.37034 20.96708 20.81892\n [769] 21.23278 21.22440 21.20182\n [772] 21.25346 21.11294 21.32182\n [775] 21.10932 21.30246",
        " 21.55084\n [778] 21.50864 21.64278 21.21134\n [781] 21.30754 21.46046 21.34432\n [784] 21.32264 21.24188 21.25550\n [787] 21.29812 21.20190 21.22808\n [790] 21.33136 21.07090 21.42410\n [793] 21.40242 21.58046 21.68938\n [796] 21.82064 21.78986 21.49724\n [799] 21.94622 22.03658 22.30672\n [802] 22.10776 22.07368 22.78492\n [805] 23.25000 24.02894 24.14656\n [808] 25.09370 25.30898 25.60300\n [811] 25.51336 25.85836 25.56492\n [814] 25.63008 25.08556 24.60884\n [817] 23.99004 23.43632 23.15502\n [820] 23.24868 23.25262 23.42424",
        "\n [823] 23.78178 23.70070 23.82800\n [826] 25.05528 18.94456 18.94456\n [829] 18.94456 18.94456 18.94456\n [832] 18.94456 18.94456 18.94456\n [835] 18.94456 18.94456 16.26388\n [838] 15.98448 16.51308 16.62076\n [841] 17.01820 19.02870 19.00464\n [844] 19.15026 18.24408 19.65972\n [847] 20.25554 20.52830 20.54422\n [850] 20.66490 20.76084 20.43966\n [853] 20.24152 20.48168 20.17364\n [856] 19.84450 19.89718 19.03288\n [859] 20.16608 20.14852 20.31072\n [862] 20.45436 20.75682 20.72646\n [865] 21.38950 21.10656 21.24930\n [868]",
        " 21.52682 21.50368 21.61506\n [871] 21.78718 21.44466 21.59068\n [874] 21.50384 21.37046 21.36520\n [877] 21.03746 21.41510 21.46814\n [880] 21.23150 21.27918 21.71306\n [883] 21.49908 21.54332 20.98238\n [886] 21.22418 21.60488 21.08054\n [889] 20.99256 21.15286 21.48570\n [892] 21.47166 21.09146 21.38350\n [895] 21.09960 21.33368 21.23198\n [898] 21.00010 21.07744 21.23682\n [901] 21.05510 21.17962 21.23478\n [904] 21.44466 21.58740 21.48062\n [907] 21.20712 21.48972 21.31710\n [910] 21.07760 21.01948 21.21466\n [913] 21.15180",
        " 20.99946 21.07308\n [916] 20.97088 21.38260 21.07332\n [919] 21.01038 21.00700 21.13226\n [922] 21.24626 21.22534 21.17306\n [925] 20.99058 21.01906 20.99034\n [928] 21.07374 21.02974 21.07858\n [931] 20.97712 21.00018 20.77242\n [934] 21.03154 20.80516 21.11478\n [937] 21.07940 21.26736 21.13424\n [940] 21.03786 21.14860 21.12586\n [943] 20.89308 21.19472 20.96934\n [946] 20.73212 21.07850 21.16354\n [949] 20.93542 20.96712 20.97984\n [952] 20.81280 20.83340 20.83848\n [955] 20.80082 20.73934 20.80688\n [958] 20.81346 21.06824",
        " 21.01200\n [961] 21.21090 21.10606 20.99780\n [964] 21.23674 21.25964 21.55514\n [967] 21.14112 21.32302 21.45976\n [970] 21.47404 21.37324 21.14760\n [973] 21.22500 21.22140 21.17708\n [976] 21.18824 21.11780 20.90572\n [979] 20.82010 21.09910 21.28920\n [982] 21.15244 21.31784 21.01530\n [985] 20.87066 20.98944 20.86484\n [988] 20.81576 21.25956 21.16386\n [991] 21.02316 21.37948 21.07512\n [994] 21.24554 21.31086 21.06668\n [997] 21.17986 21.33566 21.14030\n[1000] 20.95692\n [ reached getOption(\"max.print\") -- omitted 29175 entries ]\n",
        "> ",
        "  f.mass <- pa_flow2mass(flow, interval, moisture)",
        "> ",
        "f.mass |> density() |> plot()",
        "> ",
        "raw.yield",
        "Simple feature collection with 67466 features and 26 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.31001 ymin: 41.26623 xmax: -90.29597 ymax: 41.27335\nGeodetic CRS:  WGS 84\nFirst 10 features:\n        Field\n1  Wirth Farm\n2  Wirth Farm\n3  Wirth Farm\n4  Wirth Farm\n5  Wirth Farm\n6  Wirth Farm\n7  Wirth Farm\n8  Wirth Farm\n9  Wirth Farm\n10 Wirth Farm\n                          Dataset\n1  20/10/12-18:57:15 (1840026987)\n2  20/10/12-18:57:15 (1840026987)\n3  20/10/12-18:57:15 (1840026987)\n4  20/10/12-18:57:15 (1840026987)",
        "\n5  20/10/12-18:57:15 (1840026987)\n6  20/10/12-18:57:15 (1840026987)\n7  20/10/12-18:57:15 (1840026987)\n8  20/10/12-18:57:15 (1840026987)\n9  20/10/12-18:57:15 (1840026987)\n10 20/10/12-18:57:15 (1840026987)\n         Product Obj__Id Distance_f\n1  Wyffels W5080       1     1.5420\n2  Wyffels W5080       2     1.4764\n3  Wyffels W5080       3     1.9357\n4  Wyffels W5080       4     2.0997\n5  Wyffels W5080       5     4.8885\n6  Wyffels W5080       6     6.4961\n7  Wyffels W5080       7     2.5361\n8  Wyffels W5080       8",
        "     6.1680\n9  Wyffels W5080       9     4.0682\n10 Wyffels W5080      10     4.2979\n   Track_deg_ Duration_s Elevation_\n1       274.8        1.0   703.6253\n2       275.1        1.0   703.6089\n3       274.6        1.0   703.5138\n4       274.8        1.0   703.5171\n5        80.5        1.0   702.5033\n6        83.2        2.0   702.9364\n7        83.1        0.9   702.8871\n8       267.8        1.0   717.5328\n9       182.5        1.0   715.7021\n10      183.8        1.0   715.4856\n         Time Area_Count Swth_Wdth_",
        "\n1  2020-10-12         On    19.6853\n2  2020-10-12         On    19.6853\n3  2020-10-12         On    19.6853\n4  2020-10-12         On    19.6853\n5  2020-10-12         On    19.6853\n6  2020-10-12         On    19.6853\n7  2020-10-12         On    19.6853\n8  2020-10-12         On    19.6853\n9  2020-10-12         On    19.6853\n10 2020-10-12         On    19.6853\n   Diff_Statu Crop_Flw_M Moisture__\n1         Yes     1.6250       15.5\n2         Yes     3.0732       15.5\n3         Yes     5.6801       15.5\n4         Yes",
        "     8.3354       15.5\n5         Yes     7.7856       18.4\n6         Yes    10.1155       17.5\n7         Yes     2.6599       16.8\n8         Yes    23.4146       15.5\n9         Yes     2.3653       17.2\n10        Yes     6.3587       17.2\n   Yld_Mass_W Yld_Vol_We Yld_Mass_D\n1    2281.383    40.7390   2281.383\n2    4506.439    80.4721   4506.439\n3    6352.649   113.4402   6352.649\n4    8594.063   153.4654   8594.063\n5    3447.914    61.5699   3329.583\n6    6742.227   120.3969   6582.648\n7    2043.508    36.4912",
        "   2012.070\n8    8218.295   146.7553   8218.295\n9    1258.674    22.4763   1233.351\n10   3202.967    57.1958   3138.529\n   Yld_Vol_Dr Work_State Y_Offset_f\n1     40.7390         In     0.0023\n2     80.4721         In     0.0018\n3    113.4402         In    -0.0018\n4    153.4654         In    -0.0018\n5     59.4568         In    -0.0014\n6    117.5473         In    -0.0014\n7     35.9298         In    -0.0018\n8    146.7553         In     0.0000\n9     22.0241         In    -0.0018\n10    56.0452         In     0.0023",
        "\n   Protein___ Pass_Num Speed_mph_\n1      6553.5        2     1.0514\n2      6553.5        2     1.0066\n3      6553.5        2     1.3198\n4      6553.5        2     1.4316\n5      6553.5        3     3.3330\n6      6553.5        3     2.2146\n7      6553.5        3     1.9213\n8      6553.5        4     4.2054\n9      6553.5        6     2.7738\n10     6553.5        6     2.9304\n   Prod_ac_h_ Crop_Flw_V       Date\n1      2.5086   102.1992 2020-10-12\n2      2.4019   193.2846 2020-10-12\n3      3.1491   357.2384 2020-10-12",
        "\n4      3.4160   524.2396 2020-10-12\n5      7.9529   489.6593 2020-10-12\n6      5.2841   636.1944 2020-10-12\n7      4.5843   167.2880 2020-10-12\n8     10.0345  1472.6205 2020-10-12\n9      6.6185   148.7600 2020-10-12\n10     6.9921   399.9218 2020-10-12\n                     geometry\n1  POINT (-90.29605 41.27314)\n2  POINT (-90.29606 41.27314)\n3  POINT (-90.29606 41.27314)\n4  POINT (-90.29607 41.27314)\n5    POINT (-90.296 41.27309)\n6  POINT (-90.29597 41.27309)\n7  POINT (-90.29597 41.27309)\n8  POINT (-90.29899 41.27307)",
        "\n9  POINT (-90.29904 41.27305)\n10 POINT (-90.29904 41.27304)\n",
        "> ",
        "app.n",
        "Simple feature collection with 30175 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.30985 ymin: 41.26633 xmax: -90.29608 ymax: 41.27329\nGeodetic CRS:  WGS 84\nFirst 10 features:\n        Field\n1  Wirth Farm\n2  Wirth Farm\n3  Wirth Farm\n4  Wirth Farm\n5  Wirth Farm\n6  Wirth Farm\n7  Wirth Farm\n8  Wirth Farm\n9  Wirth Farm\n10 Wirth Farm\n                             Dataset\n1  2020_43021613_AsAppliedVRUrea.shp\n2  2020_43021613_AsAppliedVRUrea.shp\n3  2020_43021613_AsAppliedVRUrea.shp",
        "\n4  2020_43021613_AsAppliedVRUrea.shp\n5  2020_43021613_AsAppliedVRUrea.shp\n6  2020_43021613_AsAppliedVRUrea.shp\n7  2020_43021613_AsAppliedVRUrea.shp\n8  2020_43021613_AsAppliedVRUrea.shp\n9  2020_43021613_AsAppliedVRUrea.shp\n10 2020_43021613_AsAppliedVRUrea.shp\n   Product Obj__Id Distance_f Duration_s\n1     Urea       1     1.4013        0.2\n2     Urea       2     1.4013        0.2\n3     Urea       3     1.4670        0.2\n4     Urea       4     1.5326        0.2\n5     Urea       5     1.5326        0.2\n6     Urea",
        "       6     1.5982        0.2\n7     Urea       7     1.6966        0.2\n8     Urea       8     1.7294        0.2\n9     Urea       9     1.7622        0.2\n10    Urea      10     1.8278        0.2\n   Swth_Wdth_ Rt_Apd_Ms_ Tgt_Rate_l\n1          80     0.0000   219.5709\n2          80    10.2628   219.5709\n3          80   128.9918   219.5709\n4          80   171.2437   219.5709\n5          80   189.2542   219.5709\n6          80   182.2783   219.5709\n7          80   172.5651   219.5709\n8          80   174.4770   219.5709",
        "\n9          80   186.9693   219.5709\n10         80   182.4924   219.5709\n   Speed_mph_ Prod_ac_h_ Prdt_Amt\n1      4.7772    46.3238    0e+00\n2      4.7772    46.3238    0e+00\n3      5.0011    48.4957    2e-04\n4      5.2248    50.6643    2e-04\n5      5.2248    50.6643    3e-04\n6      5.4484    52.8328    3e-04\n7      5.7839    56.0857    3e-04\n8      5.8957    57.1700    3e-04\n9      6.0075    58.2543    3e-04\n10     6.2311    60.4229    3e-04\n   Rate__Mass Rate__Mass.1\n1      0.0000       0.0000\n2      4.7209",
        "       5.5419\n3     59.3362      69.6556\n4     78.7721      92.4716\n5     87.0569     102.1973\n6     83.8480      98.4303\n7     79.3799      93.1852\n8     80.2594      94.2176\n9     86.0059     100.9634\n10    83.9465      98.5459\n                     geometry\n1  POINT (-90.30083 41.27316)\n2  POINT (-90.30083 41.27315)\n3  POINT (-90.30083 41.27315)\n4  POINT (-90.30083 41.27315)\n5  POINT (-90.30083 41.27314)\n6  POINT (-90.30083 41.27314)\n7  POINT (-90.30083 41.27313)\n8  POINT (-90.30083 41.27313)\n9  POINT (-90.30082 41.27312)",
        "\n10 POINT (-90.30082 41.27312)\n",
        "> ",
        "  swath <- app.n['Swth_Wdth_']",
        "> ",
        "  units(swath) <- units::as_units('ft')",
        "Error in UseMethod(\"units<-\") : \n  no applicable method for 'units<-' applied to an object of class \"c('sf', 'data.frame')\"\n",
        "> ",
        "  swath <- app.n[['Swth_Wdth_']]",
        "> ",
        "  swath <- app.n[['Swth_Wdth_']]",
        "> ",
        "  swath <- app.n[['Swth_Wdth_']]",
        "> ",
        "  units(swath) <- units::as_units('ft')",
        "> ",
        "summary(swath)",
        "   Min. 1st Qu.  Median    Mean 3rd Qu. \n     80      80      80      80      80 \n   Max. \n     80 \n",
        "> ",
        "  units(swath) <- units::as_units('m')",
        "> ",
        "summary(swath)",
        "   Min. 1st Qu.  Median    Mean 3rd Qu. \n  24.38   24.38   24.38   24.38   24.38 \n   Max. \n  24.38 \n",
        "> ",
        "  angle <- .pa_estimate_angle(st_geometry(app.n))",
        "> ",
        "angle",
        "Units: [°]\n   [1] 3.547814e+02 3.547814e+02\n   [3] 3.565715e+02 3.559394e+02\n   [5] 2.879851e-01 6.522461e-01\n   [7] 3.541116e+02 3.543850e+02\n   [9] 3.578207e+02 3.555147e+02\n  [11] 1.268000e+00 3.583047e+02\n  [13] 3.584372e+02 2.255470e+00\n  [15] 3.596079e+02 3.593599e+02\n  [17] 3.571348e+02 3.567838e+02\n  [19] 3.592919e+02 3.564513e+02\n  [21] 4.149790e-01 3.583066e+02\n  [23] 2.165103e+00 1.528139e-01\n  [25] 1.225073e-01 3.588767e+02\n  [27] 3.552448e+02 3.574050e+02\n  [29] 3.594280e+02 3.590261e+02\n  [31]",
        " 1.145738e-01 3.588622e+02\n  [33] 3.577184e+02 3.578147e+02\n  [35] 3.588316e+02 3.588027e+02\n  [37] 3.570952e+02 3.594475e+02\n  [39] 3.596951e+02 1.495511e-01\n  [41] 1.293239e+00 3.593022e+02\n  [43] 3.572421e+02 3.584303e+02\n  [45] 3.579033e+02 3.564162e+02\n  [47] 3.590784e+02 3.591189e+02\n  [49] 3.586990e+02 3.580890e+02\n  [51] 1.450985e+00 3.568635e+02\n  [53] 3.589197e+02 2.120261e-01\n  [55] 3.585335e+02 1.634927e+00\n  [57] 8.855078e-01 5.853066e-01\n  [59] 3.599670e+02 4.902134e-01\n  [61] 3.594626e+02 3.592660e+02",
        "\n  [63] 5.632535e-01 3.590425e+02\n  [65] 3.599356e+02 8.144774e-01\n  [67] 2.341781e+00 1.006380e+00\n  [69] 1.088436e+00 6.969157e-01\n  [71] 3.597969e+02 1.026241e+00\n  [73] 1.075752e+00 1.428553e+00\n  [75] 9.545776e-01 4.386548e-01\n  [77] 2.412736e+00 4.344425e-01\n  [79] 6.839871e-01 5.219952e-01\n  [81] 1.287270e+00 1.886061e+00\n  [83] 1.319094e+00 1.246826e+00\n  [85] 3.130596e-01 1.613169e+00\n  [87] 3.174917e+00 2.242428e+00\n  [89] 1.341568e-01 5.553191e-01\n  [91] 3.598886e+02 1.656810e+00\n  [93] 1.906993e+00",
        " 9.551125e-01\n  [95] 2.475662e-01 1.086097e+00\n  [97] 1.854118e+00 6.378929e-01\n  [99] 1.052166e+00 5.125938e-01\n [101] 3.594217e+02 8.104820e-01\n [103] 3.684217e-01 1.045467e+00\n [105] 1.000910e+00 9.375130e-01\n [107] 1.685650e+00 2.771182e+00\n [109] 2.555759e+00 6.386380e-01\n [111] 8.509459e-01 7.064405e-01\n [113] 3.933034e-01 7.680675e-01\n [115] 1.765795e+00 6.735257e-01\n [117] 3.662086e-01 5.976239e-01\n [119] 5.952594e-01 5.386436e-01\n [121] 2.683430e+00 2.634161e+00\n [123] 3.910867e+00 2.218407e+00\n [125]",
        " 1.821949e+00 2.543079e+00\n [127] 1.957157e+00 6.154215e-02\n [129] 1.807017e+00 2.414486e+00\n [131] 1.142354e+00 3.599432e+02\n [133] 1.331409e+00 2.494869e+00\n [135] 5.900667e-01 9.282033e-01\n [137] 7.118572e-01 3.590303e+02\n [139] 3.583924e+02 3.581021e+02\n [141] 3.593327e+02 3.567993e+02\n [143] 3.542785e+02 3.535096e+02\n [145] 3.513592e+02 3.516196e+02\n [147] 3.521226e+02 3.506485e+02\n [149] 3.450219e+02 3.410667e+02\n [151] 3.380385e+02 3.377659e+02\n [153] 3.366396e+02 3.323067e+02\n [155] 3.311427e+02 3.292863e+02",
        "\n [157] 3.268128e+02 3.241418e+02\n [159] 3.195718e+02 3.179282e+02\n [161] 3.136598e+02 3.124305e+02\n [163] 3.086987e+02 3.051611e+02\n [165] 3.021468e+02 3.002702e+02\n [167] 2.970463e+02 2.965625e+02\n [169] 2.954793e+02 2.923108e+02\n [171] 2.885439e+02 2.858221e+02\n [173] 2.842830e+02 2.834145e+02\n [175] 2.825127e+02 2.804331e+02\n [177] 2.763572e+02 2.752950e+02\n [179] 2.718740e+02 2.705147e+02\n [181] 8.964291e+01 8.803669e+01\n [183] 8.538776e+01 8.400238e+01\n [185] 8.393079e+01 8.406161e+01\n [187] 8.167493e+01",
        " 8.099789e+01\n [189] 7.748151e+01 7.524894e+01\n [191] 7.333722e+01 7.231577e+01\n [193] 7.132528e+01 7.016602e+01\n [195] 6.949720e+01 6.528421e+01\n [197] 6.542642e+01 6.512442e+01\n [199] 6.438895e+01 6.669815e+01\n [201] 6.586518e+01 6.848976e+01\n [203] 6.927389e+01 7.046846e+01\n [205] 7.098093e+01 7.218911e+01\n [207] 7.354894e+01 7.402075e+01\n [209] 7.590835e+01 7.706606e+01\n [211] 7.979273e+01 7.938518e+01\n [213] 8.054583e+01 8.272303e+01\n [215] 8.292116e+01 8.537299e+01\n [217] 8.646605e+01 8.642093e+01\n [219]",
        " 8.685089e+01 8.538738e+01\n [221] 8.611726e+01 8.878359e+01\n [223] 8.983530e+01 2.705638e+02\n [225] 8.965032e+01 2.709552e+02\n [227] 2.711076e+02 2.701869e+02\n [229] 2.704371e+02 2.706515e+02\n [231] 2.711509e+02 2.702004e+02\n [233] 2.704225e+02 2.711526e+02\n [235] 2.709201e+02 2.712765e+02\n [237] 2.720954e+02 8.980673e+01\n [239] 2.715090e+02 2.710077e+02\n [241] 2.714618e+02 2.710782e+02\n [243] 2.707300e+02 2.712195e+02\n [245] 2.717564e+02 2.714034e+02\n [247] 2.726110e+02 2.737835e+02\n [249] 2.743158e+02 2.736964e+02",
        "\n [251] 2.738077e+02 2.717402e+02\n [253] 2.730659e+02 2.724806e+02\n [255] 2.720012e+02 2.711879e+02\n [257] 2.706142e+02 2.708597e+02\n [259] 2.726222e+02 2.716184e+02\n [261] 2.721420e+02 2.700594e+02\n [263] 2.727618e+02 2.711742e+02\n [265] 2.706129e+02 2.728876e+02\n [267] 2.708354e+02 2.706492e+02\n [269] 2.706445e+02 8.942403e+01\n [271] 2.711420e+02 2.700597e+02\n [273] 2.711619e+02 2.705244e+02\n [275] 8.965364e+01 2.703944e+02\n [277] 2.703422e+02 8.850516e+01\n [279] 8.783852e+01 8.737148e+01\n [281] 8.676466e+01",
        " 8.613570e+01\n [283] 8.709214e+01 8.576792e+01\n [285] 8.479450e+01 8.288134e+01\n [287] 8.186487e+01 8.124914e+01\n [289] 7.845181e+01 7.824570e+01\n [291] 7.678284e+01 7.572281e+01\n [293] 7.156673e+01 6.982114e+01\n [295] 6.733252e+01 6.523064e+01\n [297] 6.394672e+01 6.179593e+01\n [299] 5.998343e+01 5.491423e+01\n [301] 5.175186e+01 4.861951e+01\n [303] 4.539502e+01 4.386895e+01\n [305] 4.164892e+01 3.600172e+01\n [307] 3.482881e+01 3.015131e+01\n [309] 2.781710e+01 2.588990e+01\n [311] 2.560965e+01 2.226962e+01\n [313]",
        " 1.699016e+01 1.495209e+01\n [315] 1.353563e+01 9.644365e+00\n [317] 7.336774e+00 6.304255e+00\n [319] 5.686528e+00 2.828919e+00\n [321] 3.179830e+00 5.705632e+00\n [323] 2.071909e+00 1.079666e+00\n [325] 1.698332e+00 2.882164e+00\n [327] 2.084534e+00 3.592468e+02\n [329] 3.565838e+02 3.568819e+02\n [331] 3.575649e+02 3.594542e+02\n [333] 1.903934e-02 3.583172e+02\n [335] 3.596749e+02 3.585240e+02\n [337] 3.582784e+02 3.584396e+02\n [339] 3.595960e+02 3.594355e+02\n [341] 3.586158e+02 3.597141e+02\n [343] 3.598096e+02 3.597666e+02",
        "\n [345] 3.579419e+02 1.144045e+00\n [347] 3.590065e+02 3.593268e+02\n [349] 3.588045e+02 3.587152e+02\n [351] 3.582136e+02 3.588981e+02\n [353] 3.589656e+02 3.578424e+02\n [355] 3.564665e+02 3.564057e+02\n [357] 3.572686e+02 3.584111e+02\n [359] 3.580194e+02 3.566348e+02\n [361] 3.583021e+02 3.579127e+02\n [363] 3.573736e+02 3.584374e+02\n [365] 3.581479e+02 3.594724e+02\n [367] 3.580048e+02 3.588569e+02\n [369] 3.576204e+02 3.567671e+02\n [371] 3.571434e+02 3.584668e+02\n [373] 3.597426e+02 3.590827e+02\n [375] 3.598459e+02",
        " 3.586348e+02\n [377] 3.595480e+02 3.580193e+02\n [379] 3.594610e+02 3.588840e+02\n [381] 3.588537e+02 3.592844e+02\n [383] 3.591064e+02 3.579932e+02\n [385] 3.597344e+02 3.576193e+02\n [387] 3.595441e+02 3.588191e+02\n [389] 5.463500e-02 2.734623e-02\n [391] 4.307872e-01 3.586314e+02\n [393] 2.741929e-01 3.597608e+02\n [395] 3.596019e+02 3.588601e+02\n [397] 3.597106e+02 7.520428e-01\n [399] 3.595827e+02 3.598884e+02\n [401] 2.704694e-01 7.645632e-01\n [403] 3.596859e+02 3.599337e+02\n [405] 4.580850e-01 1.460321e+00\n [407]",
        " 2.760358e+00 3.438926e+00\n [409] 4.731671e+00 7.121348e+00\n [411] 8.337393e+00 1.048969e+01\n [413] 1.018009e+01 1.191577e+01\n [415] 1.249727e+01 1.701209e+01\n [417] 2.045006e+01 2.423673e+01\n [419] 2.684621e+01 3.133498e+01\n [421] 3.482427e+01 3.872873e+01\n [423] 4.127270e+01 4.613128e+01\n [425] 4.883006e+01 5.329664e+01\n [427] 5.729674e+01 6.196710e+01\n [429] 6.498836e+01 6.927911e+01\n [431] 7.278244e+01 7.501495e+01\n [433] 7.740225e+01 7.824757e+01\n [435] 8.075377e+01 8.249250e+01\n [437] 8.407073e+01 8.620921e+01",
        "\n [439] 8.810422e+01 8.808551e+01\n [441] 8.966019e+01 8.785995e+01\n [443] 8.967467e+01 8.986890e+01\n [445] 2.716429e+02 2.720341e+02\n [447] 8.982535e+01 2.703621e+02\n [449] 2.702588e+02 2.714846e+02\n [451] 2.711366e+02 2.711572e+02\n [453] 8.902547e+01 8.840742e+01\n [455] 8.887074e+01 8.845592e+01\n [457] 8.904850e+01 8.856821e+01\n [459] 8.937611e+01 8.917525e+01\n [461] 2.702476e+02 2.701603e+02\n [463] 8.924862e+01 8.988218e+01\n [465] 8.952430e+01 2.716186e+02\n [467] 8.979330e+01 2.707521e+02\n [469] 2.702073e+02",
        " 2.705860e+02\n [471] 2.700746e+02 2.706975e+02\n [473] 2.705665e+02 2.708773e+02\n [475] 2.712030e+02 2.713042e+02\n [477] 2.719389e+02 2.709402e+02\n [479] 2.708707e+02 2.712222e+02\n [481] 2.705760e+02 2.717816e+02\n [483] 2.708855e+02 2.711152e+02\n [485] 2.704594e+02 2.713592e+02\n [487] 2.714586e+02 2.722354e+02\n [489] 2.709210e+02 2.716013e+02\n [491] 2.709738e+02 2.716875e+02\n [493] 2.710227e+02 2.715382e+02\n [495] 2.707554e+02 2.707348e+02\n [497] 2.716365e+02 2.711157e+02\n [499] 2.714806e+02 2.710475e+02\n [501]",
        " 8.984841e+01 2.700531e+02\n [503] 2.705671e+02 2.724153e+02\n [505] 2.708707e+02 2.717015e+02\n [507] 2.702587e+02 2.705174e+02\n [509] 2.703110e+02 2.710962e+02\n [511] 2.716720e+02 2.709820e+02\n [513] 2.715233e+02 2.715718e+02\n [515] 2.714519e+02 2.719769e+02\n [517] 2.713695e+02 2.714464e+02\n [519] 2.712283e+02 2.711741e+02\n [521] 2.712669e+02 2.712275e+02\n [523] 2.718192e+02 2.723447e+02\n [525] 2.711492e+02 8.983444e+01\n [527] 2.710739e+02 2.708671e+02\n [529] 2.712599e+02 2.706229e+02\n [531] 2.716420e+02 2.719423e+02",
        "\n [533] 2.701167e+02 2.705272e+02\n [535] 2.702096e+02 2.704930e+02\n [537] 2.709750e+02 2.702968e+02\n [539] 2.708132e+02 2.719799e+02\n [541] 2.713185e+02 2.708537e+02\n [543] 2.710806e+02 2.703835e+02\n [545] 8.998799e+01 2.700833e+02\n [547] 2.702065e+02 2.702347e+02\n [549] 8.955257e+01 8.966729e+01\n [551] 2.701330e+02 2.715650e+02\n [553] 8.952024e+01 2.711395e+02\n [555] 2.713020e+02 2.727699e+02\n [557] 8.973461e+01 0.000000e+00\n [559] 2.704607e+02 2.714220e+02\n [561] 2.703724e+02 2.701335e+02\n [563] 2.702157e+02",
        " 8.969446e+01\n [565] 2.703256e+02 2.707672e+02\n [567] 2.702196e+02 8.876033e+01\n [569] 8.947323e+01 8.890380e+01\n [571] 8.847731e+01 8.948208e+01\n [573] 8.920844e+01 8.833245e+01\n [575] 8.924422e+01 8.881252e+01\n [577] 8.957506e+01 2.700260e+02\n [579] 2.703546e+02 2.701865e+02\n [581] 2.701268e+02 2.718794e+02\n [583] 2.729587e+02 2.741063e+02\n [585] 2.734813e+02 2.729339e+02\n [587] 2.760540e+02 2.793759e+02\n [589] 2.803642e+02 2.792595e+02\n [591] 2.807005e+02 2.810589e+02\n [593] 2.845682e+02 2.867767e+02\n [595]",
        " 2.891611e+02 2.914507e+02\n [597] 2.915719e+02 2.893827e+02\n [599] 2.903355e+02 2.918189e+02\n [601] 2.914203e+02 2.908723e+02\n [603] 2.896920e+02 2.876504e+02\n [605] 2.871445e+02 2.859809e+02\n [607] 2.839288e+02 2.836001e+02\n [609] 2.824003e+02 2.805562e+02\n [611] 2.796632e+02 2.771885e+02\n [613] 2.756802e+02 2.757178e+02\n [615] 2.748652e+02 2.745906e+02\n [617] 2.731726e+02 2.730677e+02\n [619] 2.740798e+02 2.713421e+02\n [621] 2.719389e+02 8.954433e+01\n [623] 8.986421e+01 2.723649e+02\n [625] 2.717735e+02 2.725537e+02",
        "\n [627] 8.524252e+01 7.411172e+01\n [629] 7.473223e+01 7.285127e+01\n [631] 7.410293e+01 7.406408e+01\n [633] 7.431919e+01 7.263912e+01\n [635] 7.461003e+01 7.554108e+01\n [637] 7.509014e+01 7.605950e+01\n [639] 7.672303e+01 7.833697e+01\n [641] 7.786378e+01 7.800426e+01\n [643] 7.874045e+01 8.010527e+01\n [645] 8.111581e+01 8.099164e+01\n [647] 8.192536e+01 8.270048e+01\n [649] 8.280671e+01 8.246944e+01\n [651] 8.108053e+01 8.089047e+01\n [653] 8.313888e+01 8.458843e+01\n [655] 8.560744e+01 8.827142e+01\n [657] 2.714251e+02",
        " 2.756835e+02\n [659] 2.797600e+02 2.832574e+02\n [661] 2.849296e+02 2.886322e+02\n [663] 2.951506e+02 2.980691e+02\n [665] 3.019960e+02 3.095122e+02\n [667] 3.140996e+02 3.206829e+02\n [669] 3.251350e+02 3.314440e+02\n [671] 3.365780e+02 3.374142e+02\n [673] 3.426329e+02 3.466462e+02\n [675] 3.491595e+02 3.515018e+02\n [677] 3.540969e+02 3.560244e+02\n [679] 3.581512e+02 3.580095e+02\n [681] 3.591168e+02 3.586594e+02\n [683] 3.343963e-01 7.375779e-01\n [685] 6.397862e-01 5.649227e-01\n [687] 1.336973e+00 1.535838e+00\n [689]",
        " 2.078516e+00 1.397812e+00\n [691] 1.781573e+00 1.752357e+00\n [693] 1.284490e+00 2.099041e+00\n [695] 3.101867e+00 2.555358e+00\n [697] 1.926510e+00 1.416828e+00\n [699] 1.481275e+00 1.181298e+00\n [701] 2.002645e+00 8.271245e-01\n [703] 5.029137e-01 1.398109e+00\n [705] 2.735049e+00 2.376257e+00\n [707] 1.917340e+00 1.435506e+00\n [709] 7.107615e-01 9.448968e-01\n [711] 1.101706e+00 7.700298e-02\n [713] 3.345460e-01 3.595472e+02\n [715] 6.652331e-01 3.598258e+02\n [717] 3.597717e+02 1.790657e-01\n [719] 2.765683e+00 2.759303e+00",
        "\n [721] 1.916567e+00 3.591968e+02\n [723] 1.615329e-02 3.253589e-02\n [725] 1.765314e+00 2.475347e+00\n [727] 1.471166e+00 1.049791e+00\n [729] 1.461724e+00 2.354934e+00\n [731] 4.741314e-01 3.598816e+02\n [733] 5.943893e-01 4.694059e-01\n [735] 5.443282e-03 9.773922e-01\n [737] 1.663725e+00 1.077553e+00\n [739] 9.680892e-01 5.438632e-03\n [741] 8.046325e-01 6.741008e-01\n [743] 3.595148e+02 1.945704e-01\n [745] 6.528191e-02 3.599181e+02\n [747] 2.243449e-01 2.050608e+00\n [749] 2.100423e+00 1.153268e+00\n [751] 4.375811e-02",
        " 3.597176e+02\n [753] 4.871631e-02 1.650381e-02\n [755] 3.581020e+02 3.588991e+02\n [757] 3.594687e+02 8.151178e-01\n [759] 3.591309e+02 5.104288e-01\n [761] 3.596506e+02 7.604226e-01\n [763] 3.809920e-02 3.590064e+02\n [765] 1.638578e-01 1.474019e-01\n [767] 4.451966e-01 5.929912e-01\n [769] 9.871994e-01 2.016776e+00\n [771] 9.207265e-01 4.723415e-01\n [773] 7.226986e-01 1.672037e+00\n [775] 3.003157e+00 8.312541e-01\n [777] 1.662171e+00 2.141154e+00\n [779] 1.860095e+00 1.993788e+00\n [781] 2.117270e+00 2.263888e+00\n [783]",
        " 2.033541e+00 2.451001e+00\n [785] 2.191966e+00 1.742940e+00\n [787] 1.517882e+00 9.586318e-01\n [789] 1.415293e+00 2.397509e+00\n [791] 3.384778e+00 2.632871e+00\n [793] 4.044920e+00 3.839014e+00\n [795] 1.519803e+00 2.199640e+00\n [797] 3.133180e+00 5.785291e+00\n [799] 5.105251e+00 3.765532e+00\n [801] 3.400634e+00 4.125187e+00\n [803] 4.377097e+00 5.415359e+00\n [805] 5.728492e+00 6.959452e+00\n [807] 7.905222e+00 8.847368e+00\n [809] 1.248673e+01 1.559023e+01\n [811] 1.740104e+01 2.011296e+01\n [813] 2.361672e+01 2.617328e+01",
        "\n [815] 2.832132e+01 3.226744e+01\n [817] 3.473664e+01 3.620398e+01\n [819] 3.842471e+01 4.201844e+01\n [821] 4.355468e+01 4.466416e+01\n [823] 4.830149e+01 4.920681e+01\n [825] 5.183213e+01 5.458120e+01\n [827] 5.482212e+01 5.754176e+01\n [829] 5.795604e+01 5.765747e+01\n [831] 6.355948e+01 6.346210e+01\n [833] 6.142707e+01 6.657062e+01\n [835] 7.272808e+01 7.968068e+01\n [837] 3.424231e+02 2.874852e+00\n [839] 5.166167e-01 1.077515e+00\n [841] 2.029767e+00 6.104842e-01\n [843] 3.558624e+02 3.546151e+02\n [845] 3.528575e+02",
        " 3.516528e+02\n [847] 3.557768e+02 3.559197e+02\n [849] 3.565327e+02 3.524657e+02\n [851] 3.521761e+02 3.527898e+02\n [853] 3.541348e+02 3.560304e+02\n [855] 3.554825e+02 3.540339e+02\n [857] 3.537924e+02 3.529939e+02\n [859] 3.547979e+02 3.539637e+02\n [861] 3.540709e+02 3.517691e+02\n [863] 3.517961e+02 3.533841e+02\n [865] 3.547568e+02 3.553263e+02\n [867] 3.545751e+02 3.545887e+02\n [869] 3.552626e+02 3.543399e+02\n [871] 3.537017e+02 3.539069e+02\n [873] 3.544210e+02 3.533060e+02\n [875] 3.530399e+02 3.530474e+02\n [877]",
        " 3.522664e+02 3.540605e+02\n [879] 3.526797e+02 3.536197e+02\n [881] 3.527861e+02 3.525686e+02\n [883] 3.527826e+02 3.531194e+02\n [885] 3.533959e+02 3.537577e+02\n [887] 3.532927e+02 3.536932e+02\n [889] 3.537530e+02 3.538316e+02\n [891] 3.538509e+02 3.536248e+02\n [893] 3.537696e+02 3.536947e+02\n [895] 3.530896e+02 3.536766e+02\n [897] 3.532679e+02 3.531036e+02\n [899] 3.530842e+02 3.534109e+02\n [901] 3.532270e+02 3.526683e+02\n [903] 3.530402e+02 3.524627e+02\n [905] 3.526439e+02 3.523251e+02\n [907] 3.531568e+02 3.522279e+02",
        "\n [909] 3.524361e+02 3.523705e+02\n [911] 3.535106e+02 3.539878e+02\n [913] 3.547600e+02 3.543477e+02\n [915] 3.524481e+02 3.534768e+02\n [917] 3.535782e+02 3.534068e+02\n [919] 3.532854e+02 3.520162e+02\n [921] 3.527710e+02 3.528790e+02\n [923] 3.529943e+02 3.516273e+02\n [925] 3.528038e+02 3.527391e+02\n [927] 3.524780e+02 3.527475e+02\n [929] 3.528770e+02 3.511572e+02\n [931] 3.517460e+02 3.514114e+02\n [933] 3.523632e+02 3.524308e+02\n [935] 3.515612e+02 3.515699e+02\n [937] 3.517645e+02 3.524984e+02\n [939] 3.516446e+02",
        " 3.520971e+02\n [941] 3.524324e+02 3.518585e+02\n [943] 3.528005e+02 3.531445e+02\n [945] 3.533292e+02 3.530954e+02\n [947] 3.525543e+02 3.527286e+02\n [949] 3.526899e+02 3.526757e+02\n [951] 3.529697e+02 3.520581e+02\n [953] 3.518783e+02 3.518327e+02\n [955] 3.534700e+02 3.523912e+02\n [957] 3.514907e+02 3.524872e+02\n [959] 3.535727e+02 3.518276e+02\n [961] 3.506874e+02 3.509900e+02\n [963] 3.515238e+02 3.515625e+02\n [965] 3.512328e+02 3.523789e+02\n [967] 3.523233e+02 3.523802e+02\n [969] 3.519697e+02 3.523861e+02\n [971]",
        " 3.547074e+02 3.528903e+02\n [973] 3.537846e+02 3.529956e+02\n [975] 3.544952e+02 3.543195e+02\n [977] 3.546778e+02 3.545566e+02\n [979] 3.541481e+02 3.568904e+02\n [981] 3.564765e+02 3.557487e+02\n [983] 3.560863e+02 3.576005e+02\n [985] 3.573952e+02 3.562560e+02\n [987] 3.568936e+02 3.567234e+02\n [989] 3.567527e+02 3.582052e+02\n [991] 3.594845e+02 2.209269e-01\n [993] 3.597900e+02 5.969790e-01\n [995] 1.012534e+00 2.991868e+00\n [997] 4.656858e+00 5.142710e+00\n [999] 4.848524e+00 4.492234e+00\n [ reached getOption(\"max.print\") -- omitted 29175 entries ]\n",
        "> ",
        "head(angle)",
        "Units: [°]\n[1] 354.7813753 354.7813753 356.5715000\n[4] 355.9394352   0.2879851   0.6522461\n",
        "> ",
        "  cores = 5",
        "> ",
        "  cores <- 5",
        "> ",
        "app.pols",
        "Error: object 'app.pols' not found\n",
        "> ",
        "app.n",
        "Simple feature collection with 30175 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.30985 ymin: 41.26633 xmax: -90.29608 ymax: 41.27329\nGeodetic CRS:  WGS 84\nFirst 10 features:\n        Field\n1  Wirth Farm\n2  Wirth Farm\n3  Wirth Farm\n4  Wirth Farm\n5  Wirth Farm\n6  Wirth Farm\n7  Wirth Farm\n8  Wirth Farm\n9  Wirth Farm\n10 Wirth Farm\n                             Dataset\n1  2020_43021613_AsAppliedVRUrea.shp\n2  2020_43021613_AsAppliedVRUrea.shp\n3  2020_43021613_AsAppliedVRUrea.shp",
        "\n4  2020_43021613_AsAppliedVRUrea.shp\n5  2020_43021613_AsAppliedVRUrea.shp\n6  2020_43021613_AsAppliedVRUrea.shp\n7  2020_43021613_AsAppliedVRUrea.shp\n8  2020_43021613_AsAppliedVRUrea.shp\n9  2020_43021613_AsAppliedVRUrea.shp\n10 2020_43021613_AsAppliedVRUrea.shp\n   Product Obj__Id Distance_f Duration_s\n1     Urea       1     1.4013        0.2\n2     Urea       2     1.4013        0.2\n3     Urea       3     1.4670        0.2\n4     Urea       4     1.5326        0.2\n5     Urea       5     1.5326        0.2\n6     Urea",
        "       6     1.5982        0.2\n7     Urea       7     1.6966        0.2\n8     Urea       8     1.7294        0.2\n9     Urea       9     1.7622        0.2\n10    Urea      10     1.8278        0.2\n   Swth_Wdth_ Rt_Apd_Ms_ Tgt_Rate_l\n1          80     0.0000   219.5709\n2          80    10.2628   219.5709\n3          80   128.9918   219.5709\n4          80   171.2437   219.5709\n5          80   189.2542   219.5709\n6          80   182.2783   219.5709\n7          80   172.5651   219.5709\n8          80   174.4770   219.5709",
        "\n9          80   186.9693   219.5709\n10         80   182.4924   219.5709\n   Speed_mph_ Prod_ac_h_ Prdt_Amt\n1      4.7772    46.3238    0e+00\n2      4.7772    46.3238    0e+00\n3      5.0011    48.4957    2e-04\n4      5.2248    50.6643    2e-04\n5      5.2248    50.6643    3e-04\n6      5.4484    52.8328    3e-04\n7      5.7839    56.0857    3e-04\n8      5.8957    57.1700    3e-04\n9      6.0075    58.2543    3e-04\n10     6.2311    60.4229    3e-04\n   Rate__Mass Rate__Mass.1\n1      0.0000       0.0000\n2      4.7209",
        "       5.5419\n3     59.3362      69.6556\n4     78.7721      92.4716\n5     87.0569     102.1973\n6     83.8480      98.4303\n7     79.3799      93.1852\n8     80.2594      94.2176\n9     86.0059     100.9634\n10    83.9465      98.5459\n                     geometry\n1  POINT (-90.30083 41.27316)\n2  POINT (-90.30083 41.27315)\n3  POINT (-90.30083 41.27315)\n4  POINT (-90.30083 41.27315)\n5  POINT (-90.30083 41.27314)\n6  POINT (-90.30083 41.27314)\n7  POINT (-90.30083 41.27313)\n8  POINT (-90.30083 41.27313)\n9  POINT (-90.30082 41.27312)",
        "\n10 POINT (-90.30082 41.27312)\n",
        "> ",
        "  app.pols <- pa_make_vehicle_polygons(sf::st_geometry(app.n),",
        "+ ",
        "                                           swath,",
        "+ ",
        "                                           distance,",
        "+ ",
        "                                           angle,",
        "+ ",
        "                                           cores = cores)",
        "Error: all arguments should be of the same length\n",
        "> ",
        "dim(angle)",
        "NULL\n",
        "> ",
        "length(angle)",
        "[1] 30175\n",
        "> ",
        "length(swath)",
        "[1] 30175\n",
        "> ",
        "length(distance)",
        "[1] 1\n",
        "> ",
        "  distance <- app.n[['Distance_f']]",
        "> ",
        "  units(distance) <- units::as_units('ft')",
        "> ",
        "  units(distance) <- units::as_units('m')",
        "> ",
        "length(distance)",
        "[1] 30175\n",
        "> ",
        "  app.pols <- pa_make_vehicle_polygons(sf::st_geometry(app.n),",
        "+ ",
        "                                           swath,",
        "+ ",
        "                                           distance,",
        "+ ",
        "                                           angle,",
        "+ ",
        "                                           cores = cores)",
        "> ",
        "plot(app.pols)",
        "> ",
        "plot(app.pols, col = 'transparent', border = 'black')",
        "> ",
        "plot(st_buffer(app.pols[1]), 100)",
        "Error in h(simpleError(msg, call)) : \n  error in evaluating the argument 'x' in selecting a method for function 'plot': argument \"dist\" is missing, with no default\n",
        "> ",
        "plot(st_buffer(app.pols[1], 100))",
        "> ",
        "plot(st_buffer(app.pols[1], 100), border = 'transparent')",
        "> ",
        "plot(app.pols, add = TRUE)",
        "> ",
        "cores <- 8",
        "> ",
        "  adj.app <- pa_adjust_obs_effective_area(harvest.pols,",
        "+ ",
        "                                              crop.mass,",
        "+ ",
        "                                              var.label = 'mass',",
        "+ ",
        "                                              overlap.threshold = 0.5,",
        "+ ",
        "                                              cores = cores,",
        "+ ",
        "                                              verbose)",
        "Error: object 'crop.mass' not found\n",
        "> ",
        "  adj.app <- pa_adjust_obs_effective_area(harvest.pols,",
        "+ ",
        "                                              f.mass,",
        "+ ",
        "                                              var.label = 'mass',",
        "+ ",
        "                                              overlap.threshold = 0.5,",
        "+ ",
        "                                              cores = cores,",
        "+ ",
        "                                              verbose)",
        "Error: object 'harvest.pols' not found\n",
        "> ",
        "  adj.app <- pa_adjust_obs_effective_area(app.pols,",
        "+ ",
        "                                              f.mass,",
        "+ ",
        "                                              var.label = 'mass',",
        "+ ",
        "                                              overlap.threshold = 0.5,",
        "+ ",
        "                                              cores = cores,",
        "+ ",
        "                                              verbose)",
        "Error: object 'verbose' not found\n",
        "> ",
        "  adj.app <- pa_adjust_obs_effective_area(app.pols,",
        "+ ",
        "                                              f.mass,",
        "+ ",
        "                                              var.label = 'mass',",
        "+ ",
        "                                              overlap.threshold = 0.5,",
        "+ ",
        "                                              cores = cores,",
        "+ ",
        "                                              TRUE)",
        "Chopping  30168 overlapping polygons\n",
        "Error in checkForRemoteErrors(val) : \n  8 nodes produced errors; first error: Loop 0 edge 14 has duplicate near loop 2 edge 0\n",
        "> ",
        "devtools::load_all()",
        "\u001B[38;5;253m\u001B[36mℹ\u001B[38;5;253m Loading \u001B[34mpacu\u001B[38;5;253m\u001B[39m\n",
        "\n",
        "> ",
        "  adj.app <- pa_adjust_obs_effective_area(app.pols,",
        "+ ",
        "                                              f.mass,",
        "+ ",
        "                                              var.label = 'mass',",
        "+ ",
        "                                              overlap.threshold = 0.5,",
        "+ ",
        "                                              cores = cores,",
        "+ ",
        "                                              TRUE)",
        "Chopping  30168 overlapping polygons\n",
        "Error in checkForRemoteErrors(val) : \n  one node produced an error: Loop 0 is not valid: Edge 1 is degenerate (duplicate vertex)\n",
        "> ",
        "devtools::load_all()",
        "\u001B[38;5;253m\u001B[36mℹ\u001B[38;5;253m Loading \u001B[34mpacu\u001B[38;5;253m\u001B[39m\n",
        "\n",
        "> ",
        "  adj.app <- pa_adjust_obs_effective_area(app.pols,",
        "+ ",
        "                                              f.mass,",
        "+ ",
        "                                              var.label = 'mass',",
        "+ ",
        "                                              overlap.threshold = 0.5,",
        "+ ",
        "                                              cores = 10,",
        "+ ",
        "                                              TRUE)",
        "Chopping  30168 overlapping polygons\n",
        "There were 16 warnings (use warnings() to see them)",
        "\n",
        "> ",
        "adj.app",
        "Simple feature collection with 27042 features and 6 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -90.31 ymin: 41.26635 xmax: -90.29593 ymax: 41.2733\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   id      obs.mass area.initial\n1   1  0.00000 [lb]     10.62883\n2   2  0.94418 [lb]     10.67052\n3   3 11.86724 [lb]     11.25105\n4   4 15.75442 [lb]     11.66907\n5   5 17.41138 [lb]     11.66856\n6   6 16.76960 [lb]     12.08709\n7   7 15.87598 [lb]     12.76373\n8   8 16.05188 [lb]     13.12733\n9 ",
        "  9 17.20118 [lb]     13.38788\n10 10 16.78930 [lb]     13.80805\n   area.chopped area.ratio\n1     10.545879  0.9921954\n2     10.196146  0.9555439\n3     11.096963  0.9863050\n4     11.484205  0.9841579\n5      6.615710  0.5669687\n6      8.535740  0.7061864\n7      9.204294  0.7211288\n8      9.401335  0.7161651\n9     11.334498  0.8466241\n10    13.629212  0.9870484\n          adj.mass\n1  0.00000000 [lb]\n2  0.09260165 [lb]\n3  1.06941334 [lb]\n4  1.37183371 [lb]\n5  2.63182335 [lb]\n6  1.96463338 [lb]\n7  1.72484502 [lb]",
        "\n8  1.70740431 [lb]\n9  1.51759516 [lb]\n10 1.23186137 [lb]\n                                x\n1  POLYGON ((-90.30097 41.2731...\n2  POLYGON ((-90.30097 41.2731...\n3  POLYGON ((-90.30068 41.2731...\n4  POLYGON ((-90.30083 41.2731...\n5  MULTIPOLYGON (((-90.30079 4...\n6  MULTIPOLYGON (((-90.30079 4...\n7  MULTIPOLYGON (((-90.30087 4...\n8  MULTIPOLYGON (((-90.30068 4...\n9  POLYGON ((-90.30091 41.2731...\n10 POLYGON ((-90.30078 41.2731...\n",
        "> ",
        "plot(adj.app)",
        "Graphics error: Plot rendering error\n",
        "> ",
        "> ",
        "plot(adj.app['adj.mass'])",
        "> ",
        "plot(adj.app, border = 'transparent')",
        "> ",
        "> ",
        "> ",
        "> ",
        "plot(adj.app['adj.mass'], border = 'transparent')",
        "> ",
        "  app.app <- pa_apport_mass(sf::st_geometry(adj.app),",
        "+ ",
        "                            adj.app$adj.mass)",
        "Error in UseMethod(\"set_units\") : \n  no applicable method for 'set_units' applied to an object of class \"NULL\"\n",
        "> ",
        "adj.app$adj.mass",
        "Units: [lb]\n   [1] 0.00000000 0.09260165 1.06941334\n   [4] 1.37183371 2.63182335 1.96463338\n   [7] 1.72484502 1.70740431 1.51759516\n  [10] 1.23186137 2.31104679 1.97283777\n  [13] 1.25103841 1.33093363 1.12210946\n  [16] 1.47472316 1.50238810 1.28007840\n  [19] 1.91185128 1.62282948 1.78858978\n  [22] 1.45719469 1.24627331 2.13919442\n  [25] 1.48751303 1.23053223 1.21568053\n  [28] 1.15654492 1.85940544 1.41243230\n  [31] 1.54284354 1.19403536 1.12144565\n  [34] 1.18254148 1.22756833 1.21413787\n  [37] 1.14229871 1.88045716",
        " 1.52309687\n  [40] 1.85778247 1.36122095 1.11438592\n  [43] 1.02342379 1.02304031 0.91204315\n  [46] 0.88953371 0.84533521 0.82906899\n  [49] 1.21886178 0.95207943 0.73912827\n  [52] 1.02684675 0.99053169 0.83153423\n  [55] 0.98308966 0.96159079 0.95748200\n  [58] 0.69041662 0.96693832 0.95039623\n  [61] 0.76158637 1.02348753 0.71235967\n  [64] 0.71006556 0.71982439 0.75341147\n  [67] 1.07249075 0.98769272 0.73718177\n  [70] 0.69960401 0.71102511 0.70750969\n  [73] 0.70438471 0.68901903 0.70989896\n  [76] 0.70203074 0.70037503",
        " 0.66978013\n  [79] 0.68775253 0.70478374 0.74003416\n  [82] 0.70841357 0.70187553 0.72480331\n  [85] 0.74598816 0.72876222 1.08340381\n  [88] 1.02576658 0.79393196 0.75083198\n  [91] 0.73165317 0.72512368 0.70369718\n  [94] 0.72498238 0.72472644 0.69695867\n  [97] 1.12646927 1.04613776 0.77837771\n [100] 0.74643485 0.74356129 0.74185224\n [103] 0.76509606 0.75608613 0.76500468\n [106] 0.73263731 0.76539372 0.75945500\n [109] 0.77191797 0.75083733 0.73850483\n [112] 0.75856143 0.78728055 0.80080276\n [115] 0.76701333 0.76181387",
        " 0.76175665\n [118] 0.77244974 0.75051675 0.76314744\n [121] 0.77002396 0.74746758 0.77938487\n [124] 0.77045450 0.77292441 0.78171748\n [127] 0.79586162 1.20074602 1.15509250\n [130] 0.88243640 0.77956777 0.77593255\n [133] 0.81660255 1.23347539 0.93457036\n [136] 0.94276230 0.98475356 1.03640299\n [139] 1.13123758 1.25963521 1.30964425\n [142] 1.42059622 1.48239562 1.47868108\n [145] 1.57080602 1.65375290 1.56070296\n [148] 1.47933499 1.34601724 1.38251682\n [151] 1.30020254 1.26862890 1.07496916\n [154] 1.15387153 1.19459091",
        " 1.24507553\n [157] 1.37735460 1.48442962 1.57723942\n [160] 1.61192701 1.76490926 1.85511399\n [163] 1.80588766 1.71361026 1.78320238\n [166] 1.12765001 1.17686153 1.14224294\n [169] 1.08463196 1.03356326 1.00258133\n [172] 0.93905983 0.97391204 0.92352601\n [175] 0.90845370 0.90566949 0.84813823\n [178] 0.83795790 0.87642274 0.87204677\n [181] 0.85698112 0.88057086 0.85074857\n [184] 0.84560326 0.82351984 0.82161264\n [187] 0.82011874 0.82490314 0.77874632\n [190] 0.81109093 0.84628364 0.91489142\n [193] 1.43446681 1.03413635",
        " 0.90980851\n [196] 0.92785734 0.89744135 1.28294151\n [199] 1.12987697 0.88301758 0.81625338\n [202] 0.77505985 0.76526373 0.76332390\n [205] 0.74137245 0.74279206 0.71076540\n [208] 0.71709212 0.72287988 0.70438539\n [211] 0.99566988 0.99952938 0.75704101\n [214] 0.68457175 0.71192346 0.72724642\n [217] 0.72212673 0.72629401 0.70282487\n [220] 0.72149521 0.72529580 0.73140207\n [223] 0.71537644 0.70411716 0.70904676\n [226] 0.72046986 0.74222740 0.71904473\n [229] 0.74073000 0.73672528 0.70340403\n [232] 0.71124837 0.72998074",
        " 0.74252866\n [235] 0.71255776 0.70884542 0.70443407\n [238] 0.71953413 0.70445569 0.71997467\n [241] 0.73023084 0.70625966 0.74649917\n [244] 0.73666976 0.72789222 0.71507892\n [247] 0.74968676 0.73759800 0.75083452\n [250] 0.73596598 0.74222798 0.72831878\n [253] 0.75963413 1.10305088 0.77200404\n [256] 0.73398883 1.09143568 1.03295105\n [259] 1.01331220 0.77831755 0.77271772\n [262] 0.77001268 1.10240189 1.05745083\n [265] 0.81034948 1.11016901 0.79171984\n [268] 1.11019708 0.78735653 1.18330572\n [271] 0.83605588 0.80282739",
        " 0.78695034\n [274] 0.84797032 0.82956467 0.89284233\n [277] 0.90017567 0.92411379 0.97096654\n [280] 0.98397725 1.00114069 1.04192893\n [283] 1.10511151 1.13015911 1.06483203\n [286] 1.01474747 1.03997120 1.07824864\n [289] 1.64283169 1.49479350 1.64073177\n [292] 1.19840084 1.99589572 1.70644996\n [295] 1.45332868 1.19381734 1.19447880\n [298] 1.10977084 0.94804125 0.91249542\n [301] 0.83991006 0.84636437 0.85003310\n [304] 0.74338722 0.72692301 0.69199718\n [307] 0.66258094 0.66729159 0.90804397\n [310] 0.65221865 0.68354302",
        " 0.66286366\n [313] 0.60663480 0.65141738 0.65484339\n [316] 0.69475771 0.68557493 0.65809690\n [319] 0.72151485 0.72764175 0.72830070\n [322] 0.73448846 0.74031299 0.74032973\n [325] 0.74474515 0.73510741 0.75349725\n [328] 0.75755376 0.76536608 0.76777039\n [331] 0.75375116 0.76977967 0.77449163\n [334] 0.76236588 0.76426239 0.77649376\n [337] 0.74986209 0.77806953 0.76045484\n [340] 1.08832305 1.04279401 0.78787325\n [343] 1.10709247 0.77250717 0.74391290\n [346] 0.75659608 1.10525105 1.04148349\n [349] 0.77251836 0.75222697",
        " 0.74839506\n [352] 0.73446401 0.73214968 0.73250382\n [355] 0.73569807 0.71839226 1.08170842\n [358] 1.03651828 0.77073606 0.75188278\n [361] 0.73796634 0.75085997 0.74974392\n [364] 0.74532456 0.76029877 0.74291117\n [367] 0.74508052 1.11945554 1.03412356\n [370] 0.79164894 1.13686278 1.06971675\n [373] 0.76907947 0.73035200 0.75859894\n [376] 0.75997709 1.12534889 1.02902099\n [379] 0.80060875 1.10158685 0.78285848\n [382] 0.74587095 1.03806967 1.04488550\n [385] 0.77448900 1.12219687 1.05254688\n [388] 0.79102495 0.73826546",
        " 0.72334698\n [391] 0.74802325 0.74359372 0.73937043\n [394] 0.74156189 0.73364096 0.74571642\n [397] 0.73739289 0.74338460 0.75440708\n [400] 0.75151799 0.76552721 0.73765928\n [403] 0.75065360 0.76644922 0.74849920\n [406] 0.74535933 0.74066359 0.74824570\n [409] 0.74172422 0.73637946 0.74727986\n [412] 0.75491270 0.73121482 0.74916854\n [415] 0.74697485 0.76757465 0.77086800\n [418] 0.77929795 0.78159890 0.76967899\n [421] 0.81936259 0.83550078 0.84683436\n [424] 0.84266487 0.85558324 0.92211418\n [427] 0.96597017 1.03913154",
        " 1.04398026\n [430] 1.13300450 1.15661378 1.20416845\n [433] 1.24585521 1.31618708 1.32678926\n [436] 1.39631292 1.41021603 1.45647753\n [439] 1.45152413 1.44232109 1.58556522\n [442] 1.70848600 1.74974811 2.02620373\n [445] 2.33174322 2.66679269 0.81112152\n [448] 0.99896067 0.84251250 0.73579717\n [451] 0.72997418 0.79826798 1.25474848\n [454] 0.89178971 0.76017121 0.81321073\n [457] 0.82858170 0.84186937 0.82034030\n [460] 0.84086369 0.83367517 0.78302273\n [463] 0.76659112 0.77065465 0.73461236\n [466] 0.69886186 0.69396828",
        " 0.65226093\n [469] 0.69707864 0.67169986 0.68914653\n [472] 0.68283160 0.70475513 0.68929340\n [475] 0.70612522 0.70192658 0.71179273\n [478] 0.73285890 0.73517065 0.74595752\n [481] 0.75350390 0.74556648 0.75604743\n [484] 0.74638195 0.75857457 0.75817150\n [487] 0.73042627 0.76536993 0.75945007\n [490] 0.73813494 0.75497907 0.78617433\n [493] 0.76317598 0.77277921 0.73172971\n [496] 0.75381471 0.78330974 0.74573754\n [499] 0.74199978 0.75103055 0.77495782\n [502] 0.76849613 0.74236297 0.76644354\n [505] 0.73725971 0.76562159",
        " 0.75576891\n [508] 0.75598110 0.75661952 0.77007365\n [511] 0.75301924 0.76580355 0.75749902\n [514] 0.77716659 0.77906095 0.77742018\n [517] 0.76714211 0.77268179 0.77206658\n [520] 0.74886764 0.75103551 0.76168813\n [523] 0.75723999 0.74217871 0.76077297\n [526] 0.74555348 0.76659822 0.74952406\n [529] 0.75599242 0.75305652 0.74815258\n [532] 0.75512560 0.75988400 0.76657271\n [535] 0.74982412 0.75308514 0.74838872\n [538] 0.75817487 0.74903644 0.76338488\n [541] 0.75138930 0.75499742 0.73246837\n [544] 0.75906782 0.74076082",
        " 0.75721211\n [547] 0.74467246 0.76365087 0.75712452\n [550] 0.74642589 0.74721055 0.75178362\n [553] 0.73766191 0.76174906 0.74499078\n [556] 0.72538261 0.75127335 0.75252010\n [559] 0.72750634 0.75817180 0.74883898\n [562] 0.73212014 0.74135676 0.74700326\n [565] 0.73158166 0.72968929 0.74491057\n [568] 0.73880257 0.74010469 0.74326927\n [571] 0.75926258 0.75307530 0.74087373\n [574] 0.75378264 0.74516783 0.77846968\n [577] 0.73942146 0.75298747 0.76550466\n [580] 0.77020470 0.75224047 0.74290696\n [583] 0.75420104 0.74744161",
        " 0.74854194\n [586] 0.75293135 0.73884932 0.74199848\n [589] 0.73812642 0.73540237 0.75465883\n [592] 0.74820657 0.76631166 0.74175717\n [595] 0.72650963 0.74961420 0.72834214\n [598] 0.72891552 0.75450082 0.73283301\n [601] 0.73450093 1.10064966 1.02564397\n [604] 1.04344437 0.77764468 0.72551291\n [607] 0.73550511 0.74943287 0.74826736\n [610] 0.73202132 0.72704969 0.72766827\n [613] 0.74675709 0.76013597 0.74188346\n [616] 0.72994657 0.73723311 0.74069938\n [619] 0.72116898 0.72385508 0.74538301\n [622] 0.74056472 0.73188526",
        " 0.70465795\n [625] 0.73195285 0.74302634 0.73339767\n [628] 0.74644094 0.72069021 0.73010649\n [631] 0.72972876 0.72883325 0.75341415\n [634] 0.73636424 0.73629452 0.74743052\n [637] 0.73971560 0.73856189 0.76010132\n [640] 0.70609637 0.72587450 0.74893688\n [643] 0.73686088 0.75939371 0.72261544\n [646] 0.73094551 0.70966993 0.73334156\n [649] 0.77984423 0.74010213 0.75471015\n [652] 0.75089970 0.73681880 0.74599650\n [655] 0.72139095 0.72703667 0.74456695\n [658] 0.75244096 0.74969393 0.75629510\n [661] 0.74690480 0.68985889",
        " 0.70401831\n [664] 0.58233625 0.48154684 0.47618837\n [667] 0.42576832 0.41901100 0.38791882\n [670] 0.40691029 0.42598103 0.37384143\n [673] 0.32722135 0.34644467 0.34084504\n [676] 0.34238685 0.36121467 0.35802179\n [679] 0.36404703 0.34530197 0.38829418\n [682] 0.46270086 0.52912564 0.52860719\n [685] 0.61605783 0.68807314 0.74394971\n [688] 0.78808790 0.75181318 0.76674144\n [691] 0.76843261 0.75081845 0.76375885\n [694] 0.78547487 0.76690087 0.72753659\n [697] 0.75794536 0.75770597 0.73619614\n [700] 0.72545087 0.74197336",
        " 0.75676432\n [703] 0.74436210 0.71546738 0.69735697\n [706] 0.72203926 0.73163080 0.72113927\n [709] 0.70820870 0.72404265 0.72689665\n [712] 0.74498477 0.75349442 0.72034601\n [715] 0.71393558 0.69556917 0.72495445\n [718] 0.74426035 0.71887982 0.72552180\n [721] 0.72703901 0.73826801 0.73001695\n [724] 0.74330661 0.72611946 0.72415934\n [727] 0.72217932 0.72914031 0.70985175\n [730] 0.72312656 0.70641780 0.69559755\n [733] 0.72186384 0.73715678 0.75139707\n [736] 0.71903445 1.07394913 0.77083528\n [739] 0.75621998 0.75354494",
        " 0.73988985\n [742] 0.74222324 0.72530382 0.75996981\n [745] 0.75515929 0.75897861 0.76693144\n [748] 0.75896611 0.75810361 0.76743650\n [751] 0.75915271 0.79321880 0.80020029\n [754] 0.78689545 0.80383173 0.82455186\n [757] 0.81061235 0.82158108 0.85100098\n [760] 0.84189255 0.82836316 0.84002516\n [763] 0.82602525 0.84827872 0.72170687\n [766] 0.57943304 0.62059527 0.63119876\n [769] 0.65143475 0.75072328 0.78311569\n [772] 0.86285776 0.85210703 0.85328937\n [775] 0.85320339 0.84477923 0.86885461\n [778] 0.90400068 0.87654327",
        " 0.87237225\n [781] 0.88443310 0.90924200 0.88655510\n [784] 0.90491967 0.91367486 0.89129091\n [787] 0.90087103 0.88124878 0.88272935\n [790] 0.88154077 0.89489221 0.88738809\n [793] 0.89628327 0.88694204 1.08798137\n [796] 1.15015665 1.13232506 1.13451137\n [799] 0.89638314 0.85363400 0.89595870\n [802] 0.88612110 0.88006402 0.90156503\n [805] 0.86707181 0.88565733 0.88656440\n [808] 0.88553024 0.87640458 0.89033299\n [811] 0.89965930 0.90881077 0.86455031\n [814] 0.91079744 0.89772943 0.91064331\n [817] 0.90992427 0.89512252",
        " 0.91128217\n [820] 0.92664749 0.90230458 0.92405290\n [823] 0.91311404 0.91843051 0.90743424\n [826] 0.89341488 0.89311777 0.89712663\n [829] 0.94280567 0.88432452 0.86523404\n [832] 0.86375107 0.89210247 0.91251041\n [835] 0.85461955 0.84770457 0.90141131\n [838] 0.88390169 0.85830310 0.84615820\n [841] 0.88996281 0.83289576 0.81111752\n [844] 0.80066678 0.79077747 0.80092549\n [847] 0.77266425 0.75132159 0.76890946\n [850] 0.76191599 0.78389790 0.74716589\n [853] 0.74947658 0.74761397 0.74862377\n [856] 0.73030388 0.72658207",
        " 0.72724198\n [859] 0.74043291 1.04244256 0.71689143\n [862] 0.67105887 0.69476175 0.70739332\n [865] 0.74761789 0.74988800 0.76387874\n [868] 0.73803352 0.70985906 0.72787213\n [871] 0.73189524 0.74165371 1.12879899\n [874] 0.79152702 1.12052799 1.01163543\n [877] 1.04299395 0.80027478 0.77289342\n [880] 0.75362511 0.79805977 0.83696601\n [883] 0.83834522 0.86985986 0.86970114\n [886] 0.92651463 1.02412182 1.51512853\n [889] 1.06193480 1.53045361 1.11790995\n [892] 1.00190507 0.97525444 1.01971137\n [895] 0.92826139 0.86794928",
        " 0.87482833\n [898] 0.89126223 0.90533821 0.87380615\n [901] 0.83401745 0.84475373 0.82990411\n [904] 0.82041294 0.82200775 0.82415960\n [907] 0.81958549 0.84768071 0.85682927\n [910] 0.81869423 0.81328737 0.79635947\n [913] 0.75356431 0.76263563 0.78949360\n [916] 0.77283112 0.74456172 0.75993817\n [919] 0.76037340 0.73886693 0.71734767\n [922] 0.67935868 0.66803779 0.66908647\n [925] 0.66536812 1.02024237 1.00766210\n [928] 0.73390961 0.68631217 0.73860136\n [931] 0.72965328 0.73607137 0.72633087\n [934] 0.69998915 0.74913194",
        " 0.73164287\n [937] 0.73402271 0.75467858 0.72224807\n [940] 0.73350242 0.74530582 0.74178461\n [943] 0.73021822 0.74112082 0.73109227\n [946] 0.73583479 0.74298920 0.74424475\n [949] 0.73201987 0.73495719 0.73908612\n [952] 0.72029747 0.73459969 0.73875082\n [955] 0.72286667 0.73663944 0.74449265\n [958] 0.73135515 0.73756929 0.71454750\n [961] 0.74918923 0.74417911 0.75164917\n [964] 0.73596820 0.75401187 0.75476607\n [967] 0.75952314 0.77090070 0.75590186\n [970] 0.74274823 0.75478124 0.77027730\n [973] 0.76742483 0.79899363",
        " 0.78293137\n [976] 0.75688624 0.73413948 0.72794327\n [979] 0.75645941 0.75397405 0.73936194\n [982] 0.72466569 0.71659723 0.73762340\n [985] 0.72020948 0.72297673 0.74944020\n [988] 0.75061174 0.74907829 0.73882336\n [991] 0.73333620 0.73716788 0.75467500\n [994] 0.73728458 0.69267662 0.72466047\n [997] 0.70662061 0.70825653 0.71265831\n[1000] 0.73486494\n [ reached getOption(\"max.print\") -- omitted 26042 entries ]\n",
        "> ",
        "adj.app$adj.mass |> head()",
        "Units: [lb]\n[1] 0.00000000 0.09260165 1.06941334\n[4] 1.37183371 2.63182335 1.96463338\n",
        "> ",
        "sf::st_geometry(adj.app)",
        "Geometry set for 27042 features \nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -90.31 ymin: 41.26635 xmax: -90.29593 ymax: 41.2733\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n",
        "POLYGON ((-90.30097 41.27317, -90.30068 41.2731...\n",
        "POLYGON ((-90.30097 41.27317, -90.30072 41.2731...\n",
        "POLYGON ((-90.30068 41.27314, -90.30068 41.2731...\n",
        "POLYGON ((-90.30083 41.27314, -90.30079 41.2731...\n",
        "MULTIPOLYGON (((-90.30079 41.27314, -90.30083 4...\n",
        "> ",
        "  app.app <- pa_apport_mass(sf::st_geometry(adj.app),",
        "+ ",
        "                            adj.app$adj.mass)",
        "Error in UseMethod(\"set_units\") : \n  no applicable method for 'set_units' applied to an object of class \"NULL\"\n",
        "> ",
        "head(adj.app)",
        "Simple feature collection with 6 features and 6 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -90.30097 ymin: 41.27313 xmax: -90.30068 ymax: 41.27318\nGeodetic CRS:  WGS 84\n  id      obs.mass area.initial\n1  1  0.00000 [lb]     10.62883\n2  2  0.94418 [lb]     10.67052\n3  3 11.86724 [lb]     11.25105\n4  4 15.75442 [lb]     11.66907\n5  5 17.41138 [lb]     11.66856\n6  6 16.76960 [lb]     12.08709\n  area.chopped area.ratio\n1     10.54588  0.9921954\n2     10.19615  0.9555439\n3     11.09696",
        "  0.9863050\n4     11.48421  0.9841579\n5      6.61571  0.5669687\n6      8.53574  0.7061864\n         adj.mass\n1 0.00000000 [lb]\n2 0.09260165 [lb]\n3 1.06941334 [lb]\n4 1.37183371 [lb]\n5 2.63182335 [lb]\n6 1.96463338 [lb]\n                               x\n1 POLYGON ((-90.30097 41.2731...\n2 POLYGON ((-90.30097 41.2731...\n3 POLYGON ((-90.30068 41.2731...\n4 POLYGON ((-90.30083 41.2731...\n5 MULTIPOLYGON (((-90.30079 4...\n6 MULTIPOLYGON (((-90.30079 4...\n",
        "> ",
        "st_geometry_type(adj.app)",
        "   [1] POLYGON      POLYGON     \n   [3] POLYGON      POLYGON     \n   [5] MULTIPOLYGON MULTIPOLYGON\n   [7] MULTIPOLYGON MULTIPOLYGON\n   [9] POLYGON      POLYGON     \n  [11] MULTIPOLYGON MULTIPOLYGON\n  [13] POLYGON      MULTIPOLYGON\n  [15] POLYGON      POLYGON     \n  [17] POLYGON      POLYGON     \n  [19] MULTIPOLYGON MULTIPOLYGON\n  [21] MULTIPOLYGON MULTIPOLYGON\n  [23] POLYGON      MULTIPOLYGON\n  [25] POLYGON      POLYGON     \n  [27] POLYGON      POLYGON     \n  [29] MULTIPOLYGON MULTIPOLYGON\n  [31] MULTIPOLYGON",
        " POLYGON     \n  [33] POLYGON      POLYGON     \n  [35] POLYGON      POLYGON     \n  [37] POLYGON      MULTIPOLYGON\n  [39] MULTIPOLYGON MULTIPOLYGON\n  [41] POLYGON      POLYGON     \n  [43] POLYGON      POLYGON     \n  [45] POLYGON      POLYGON     \n  [47] POLYGON      POLYGON     \n  [49] MULTIPOLYGON MULTIPOLYGON\n  [51] POLYGON      MULTIPOLYGON\n  [53] MULTIPOLYGON POLYGON     \n  [55] MULTIPOLYGON MULTIPOLYGON\n  [57] MULTIPOLYGON POLYGON     \n  [59] MULTIPOLYGON MULTIPOLYGON\n  [61] POLYGON      MULTIPOLYGON\n  [63]",
        " POLYGON      POLYGON     \n  [65] POLYGON      POLYGON     \n  [67] POLYGON      MULTIPOLYGON\n  [69] POLYGON      POLYGON     \n  [71] POLYGON      POLYGON     \n  [73] POLYGON      POLYGON     \n  [75] POLYGON      POLYGON     \n  [77] POLYGON      POLYGON     \n  [79] POLYGON      POLYGON     \n  [81] POLYGON      POLYGON     \n  [83] POLYGON      POLYGON     \n  [85] POLYGON      POLYGON     \n  [87] POLYGON      MULTIPOLYGON\n  [89] POLYGON      POLYGON     \n  [91] POLYGON      POLYGON     \n  [93] POLYGON      POLYGON     ",
        "\n  [95] POLYGON      POLYGON     \n  [97] POLYGON      MULTIPOLYGON\n  [99] POLYGON      POLYGON     \n [101] POLYGON      POLYGON     \n [103] POLYGON      POLYGON     \n [105] POLYGON      POLYGON     \n [107] POLYGON      POLYGON     \n [109] POLYGON      POLYGON     \n [111] POLYGON      POLYGON     \n [113] POLYGON      POLYGON     \n [115] POLYGON      POLYGON     \n [117] POLYGON      POLYGON     \n [119] POLYGON      POLYGON     \n [121] POLYGON      POLYGON     \n [123] POLYGON      POLYGON     \n [125] POLYGON     ",
        " POLYGON     \n [127] POLYGON      POLYGON     \n [129] MULTIPOLYGON POLYGON     \n [131] POLYGON      POLYGON     \n [133] POLYGON      POLYGON     \n [135] POLYGON      POLYGON     \n [137] POLYGON      POLYGON     \n [139] POLYGON      POLYGON     \n [141] POLYGON      POLYGON     \n [143] POLYGON      POLYGON     \n [145] POLYGON      POLYGON     \n [147] POLYGON      POLYGON     \n [149] POLYGON      POLYGON     \n [151] POLYGON      POLYGON     \n [153] POLYGON      POLYGON     \n [155] POLYGON      POLYGON     \n [157]",
        " POLYGON      POLYGON     \n [159] POLYGON      POLYGON     \n [161] POLYGON      POLYGON     \n [163] POLYGON      POLYGON     \n [165] POLYGON      POLYGON     \n [167] POLYGON      POLYGON     \n [169] POLYGON      POLYGON     \n [171] POLYGON      POLYGON     \n [173] MULTIPOLYGON POLYGON     \n [175] POLYGON      POLYGON     \n [177] POLYGON      POLYGON     \n [179] POLYGON      POLYGON     \n [181] POLYGON      POLYGON     \n [183] POLYGON      POLYGON     \n [185] POLYGON      POLYGON     \n [187] POLYGON      POLYGON     ",
        "\n [189] POLYGON      POLYGON     \n [191] POLYGON      POLYGON     \n [193] POLYGON      POLYGON     \n [195] POLYGON      POLYGON     \n [197] POLYGON      MULTIPOLYGON\n [199] MULTIPOLYGON POLYGON     \n [201] POLYGON      POLYGON     \n [203] POLYGON      POLYGON     \n [205] POLYGON      POLYGON     \n [207] POLYGON      POLYGON     \n [209] POLYGON      POLYGON     \n [211] MULTIPOLYGON MULTIPOLYGON\n [213] POLYGON      POLYGON     \n [215] POLYGON      POLYGON     \n [217] POLYGON      POLYGON     \n [219] POLYGON     ",
        " POLYGON     \n [221] POLYGON      POLYGON     \n [223] POLYGON      POLYGON     \n [225] POLYGON      POLYGON     \n [227] POLYGON      POLYGON     \n [229] POLYGON      POLYGON     \n [231] POLYGON      POLYGON     \n [233] POLYGON      POLYGON     \n [235] MULTIPOLYGON POLYGON     \n [237] POLYGON      POLYGON     \n [239] POLYGON      POLYGON     \n [241] POLYGON      POLYGON     \n [243] POLYGON      POLYGON     \n [245] POLYGON      POLYGON     \n [247] POLYGON      POLYGON     \n [249] POLYGON      POLYGON     \n [251]",
        " POLYGON      POLYGON     \n [253] POLYGON      MULTIPOLYGON\n [255] POLYGON      POLYGON     \n [257] POLYGON      MULTIPOLYGON\n [259] MULTIPOLYGON POLYGON     \n [261] POLYGON      POLYGON     \n [263] MULTIPOLYGON MULTIPOLYGON\n [265] POLYGON      MULTIPOLYGON\n [267] POLYGON      POLYGON     \n [269] POLYGON      MULTIPOLYGON\n [271] POLYGON      POLYGON     \n [273] POLYGON      POLYGON     \n [275] POLYGON      POLYGON     \n [277] POLYGON      POLYGON     \n [279] POLYGON      POLYGON     \n [281] POLYGON      POLYGON     ",
        "\n [283] POLYGON      POLYGON     \n [285] POLYGON      POLYGON     \n [287] POLYGON      POLYGON     \n [289] POLYGON      POLYGON     \n [291] POLYGON      POLYGON     \n [293] POLYGON      POLYGON     \n [295] POLYGON      POLYGON     \n [297] POLYGON      POLYGON     \n [299] POLYGON      POLYGON     \n [301] POLYGON      POLYGON     \n [303] POLYGON      POLYGON     \n [305] POLYGON      POLYGON     \n [307] POLYGON      POLYGON     \n [309] MULTIPOLYGON POLYGON     \n [311] POLYGON      POLYGON     \n [313] POLYGON     ",
        " POLYGON     \n [315] POLYGON      POLYGON     \n [317] POLYGON      POLYGON     \n [319] POLYGON      POLYGON     \n [321] POLYGON      POLYGON     \n [323] POLYGON      POLYGON     \n [325] POLYGON      POLYGON     \n [327] POLYGON      POLYGON     \n [329] POLYGON      POLYGON     \n [331] POLYGON      POLYGON     \n [333] POLYGON      POLYGON     \n [335] POLYGON      POLYGON     \n [337] POLYGON      POLYGON     \n [339] POLYGON      MULTIPOLYGON\n [341] MULTIPOLYGON POLYGON     \n [343] MULTIPOLYGON POLYGON     \n [345]",
        " POLYGON      POLYGON     \n [347] POLYGON      MULTIPOLYGON\n [349] POLYGON      POLYGON     \n [351] POLYGON      POLYGON     \n [353] POLYGON      POLYGON     \n [355] POLYGON      POLYGON     \n [357] MULTIPOLYGON MULTIPOLYGON\n [359] POLYGON      POLYGON     \n [361] POLYGON      POLYGON     \n [363] POLYGON      POLYGON     \n [365] POLYGON      POLYGON     \n [367] POLYGON      POLYGON     \n [369] MULTIPOLYGON POLYGON     \n [371] POLYGON      MULTIPOLYGON\n [373] POLYGON      POLYGON     \n [375] POLYGON      POLYGON     ",
        "\n [377] POLYGON      MULTIPOLYGON\n [379] POLYGON      POLYGON     \n [381] POLYGON      POLYGON     \n [383] MULTIPOLYGON MULTIPOLYGON\n [385] POLYGON      POLYGON     \n [387] MULTIPOLYGON POLYGON     \n [389] POLYGON      POLYGON     \n [391] POLYGON      POLYGON     \n [393] POLYGON      POLYGON     \n [395] POLYGON      POLYGON     \n [397] POLYGON      POLYGON     \n [399] POLYGON      POLYGON     \n [401] POLYGON      POLYGON     \n [403] POLYGON      POLYGON     \n [405] POLYGON      POLYGON     \n [407] POLYGON     ",
        " POLYGON     \n [409] POLYGON      POLYGON     \n [411] POLYGON      POLYGON     \n [413] POLYGON      POLYGON     \n [415] POLYGON      POLYGON     \n [417] POLYGON      POLYGON     \n [419] POLYGON      POLYGON     \n [421] POLYGON      POLYGON     \n [423] POLYGON      POLYGON     \n [425] POLYGON      POLYGON     \n [427] POLYGON      POLYGON     \n [429] POLYGON      POLYGON     \n [431] POLYGON      POLYGON     \n [433] POLYGON      POLYGON     \n [435] POLYGON      POLYGON     \n [437] POLYGON      POLYGON     \n [439]",
        " POLYGON      POLYGON     \n [441] POLYGON      POLYGON     \n [443] POLYGON      POLYGON     \n [445] POLYGON      POLYGON     \n [447] POLYGON      MULTIPOLYGON\n [449] POLYGON      POLYGON     \n [451] POLYGON      POLYGON     \n [453] MULTIPOLYGON POLYGON     \n [455] POLYGON      POLYGON     \n [457] POLYGON      POLYGON     \n [459] POLYGON      POLYGON     \n [461] POLYGON      POLYGON     \n [463] POLYGON      POLYGON     \n [465] POLYGON      POLYGON     \n [467] POLYGON      POLYGON     \n [469] POLYGON      POLYGON     ",
        "\n [471] POLYGON      POLYGON     \n [473] POLYGON      POLYGON     \n [475] POLYGON      POLYGON     \n [477] POLYGON      POLYGON     \n [479] POLYGON      POLYGON     \n [481] POLYGON      POLYGON     \n [483] POLYGON      POLYGON     \n [485] POLYGON      POLYGON     \n [487] POLYGON      POLYGON     \n [489] POLYGON      POLYGON     \n [491] POLYGON      POLYGON     \n [493] POLYGON      POLYGON     \n [495] POLYGON      POLYGON     \n [497] POLYGON      POLYGON     \n [499] POLYGON      POLYGON     \n [501] POLYGON     ",
        " POLYGON     \n [503] POLYGON      POLYGON     \n [505] POLYGON      POLYGON     \n [507] POLYGON      POLYGON     \n [509] POLYGON      POLYGON     \n [511] POLYGON      POLYGON     \n [513] POLYGON      POLYGON     \n [515] POLYGON      POLYGON     \n [517] POLYGON      POLYGON     \n [519] POLYGON      POLYGON     \n [521] POLYGON      POLYGON     \n [523] POLYGON      POLYGON     \n [525] POLYGON      POLYGON     \n [527] POLYGON      POLYGON     \n [529] POLYGON      POLYGON     \n [531] POLYGON      POLYGON     \n [533]",
        " POLYGON      POLYGON     \n [535] POLYGON      POLYGON     \n [537] POLYGON      POLYGON     \n [539] POLYGON      POLYGON     \n [541] POLYGON      POLYGON     \n [543] POLYGON      POLYGON     \n [545] POLYGON      POLYGON     \n [547] POLYGON      POLYGON     \n [549] POLYGON      POLYGON     \n [551] POLYGON      POLYGON     \n [553] POLYGON      POLYGON     \n [555] POLYGON      POLYGON     \n [557] POLYGON      POLYGON     \n [559] POLYGON      POLYGON     \n [561] POLYGON      POLYGON     \n [563] POLYGON      POLYGON     ",
        "\n [565] POLYGON      POLYGON     \n [567] POLYGON      POLYGON     \n [569] POLYGON      POLYGON     \n [571] POLYGON      POLYGON     \n [573] POLYGON      POLYGON     \n [575] POLYGON      POLYGON     \n [577] POLYGON      POLYGON     \n [579] POLYGON      POLYGON     \n [581] POLYGON      POLYGON     \n [583] POLYGON      POLYGON     \n [585] POLYGON      POLYGON     \n [587] POLYGON      POLYGON     \n [589] POLYGON      POLYGON     \n [591] POLYGON      POLYGON     \n [593] POLYGON      POLYGON     \n [595] POLYGON     ",
        " POLYGON     \n [597] POLYGON      POLYGON     \n [599] POLYGON      POLYGON     \n [601] POLYGON      MULTIPOLYGON\n [603] MULTIPOLYGON MULTIPOLYGON\n [605] POLYGON      POLYGON     \n [607] POLYGON      POLYGON     \n [609] POLYGON      POLYGON     \n [611] POLYGON      POLYGON     \n [613] POLYGON      POLYGON     \n [615] POLYGON      POLYGON     \n [617] POLYGON      POLYGON     \n [619] POLYGON      POLYGON     \n [621] POLYGON      POLYGON     \n [623] POLYGON      POLYGON     \n [625] POLYGON      POLYGON     \n [627]",
        " POLYGON      POLYGON     \n [629] POLYGON      POLYGON     \n [631] POLYGON      POLYGON     \n [633] POLYGON      POLYGON     \n [635] POLYGON      POLYGON     \n [637] POLYGON      POLYGON     \n [639] POLYGON      POLYGON     \n [641] POLYGON      POLYGON     \n [643] POLYGON      POLYGON     \n [645] POLYGON      POLYGON     \n [647] POLYGON      POLYGON     \n [649] POLYGON      POLYGON     \n [651] POLYGON      POLYGON     \n [653] POLYGON      POLYGON     \n [655] POLYGON      POLYGON     \n [657] POLYGON      POLYGON     ",
        "\n [659] POLYGON      POLYGON     \n [661] POLYGON      POLYGON     \n [663] POLYGON      POLYGON     \n [665] POLYGON      POLYGON     \n [667] POLYGON      POLYGON     \n [669] POLYGON      POLYGON     \n [671] POLYGON      POLYGON     \n [673] POLYGON      POLYGON     \n [675] POLYGON      POLYGON     \n [677] POLYGON      POLYGON     \n [679] POLYGON      POLYGON     \n [681] POLYGON      POLYGON     \n [683] POLYGON      POLYGON     \n [685] POLYGON      POLYGON     \n [687] POLYGON      POLYGON     \n [689] POLYGON     ",
        " POLYGON     \n [691] POLYGON      POLYGON     \n [693] POLYGON      POLYGON     \n [695] POLYGON      POLYGON     \n [697] POLYGON      POLYGON     \n [699] POLYGON      POLYGON     \n [701] POLYGON      POLYGON     \n [703] POLYGON      POLYGON     \n [705] POLYGON      POLYGON     \n [707] POLYGON      POLYGON     \n [709] POLYGON      POLYGON     \n [711] POLYGON      POLYGON     \n [713] POLYGON      POLYGON     \n [715] POLYGON      POLYGON     \n [717] POLYGON      POLYGON     \n [719] POLYGON      POLYGON     \n [721]",
        " POLYGON      POLYGON     \n [723] POLYGON      POLYGON     \n [725] POLYGON      POLYGON     \n [727] POLYGON      MULTIPOLYGON\n [729] POLYGON      POLYGON     \n [731] POLYGON      POLYGON     \n [733] MULTIPOLYGON POLYGON     \n [735] POLYGON      POLYGON     \n [737] POLYGON      POLYGON     \n [739] POLYGON      POLYGON     \n [741] POLYGON      POLYGON     \n [743] POLYGON      POLYGON     \n [745] POLYGON      POLYGON     \n [747] POLYGON      POLYGON     \n [749] POLYGON      POLYGON     \n [751] POLYGON      POLYGON     ",
        "\n [753] POLYGON      POLYGON     \n [755] POLYGON      POLYGON     \n [757] POLYGON      POLYGON     \n [759] POLYGON      POLYGON     \n [761] POLYGON      POLYGON     \n [763] POLYGON      POLYGON     \n [765] POLYGON      POLYGON     \n [767] POLYGON      POLYGON     \n [769] POLYGON      POLYGON     \n [771] POLYGON      POLYGON     \n [773] POLYGON      POLYGON     \n [775] POLYGON      POLYGON     \n [777] POLYGON      POLYGON     \n [779] POLYGON      POLYGON     \n [781] POLYGON      POLYGON     \n [783] POLYGON     ",
        " POLYGON     \n [785] POLYGON      POLYGON     \n [787] POLYGON      POLYGON     \n [789] POLYGON      POLYGON     \n [791] POLYGON      POLYGON     \n [793] POLYGON      POLYGON     \n [795] POLYGON      POLYGON     \n [797] POLYGON      POLYGON     \n [799] POLYGON      POLYGON     \n [801] POLYGON      POLYGON     \n [803] POLYGON      POLYGON     \n [805] POLYGON      POLYGON     \n [807] POLYGON      POLYGON     \n [809] POLYGON      POLYGON     \n [811] POLYGON      POLYGON     \n [813] POLYGON      POLYGON     \n [815]",
        " POLYGON      POLYGON     \n [817] POLYGON      POLYGON     \n [819] POLYGON      POLYGON     \n [821] POLYGON      POLYGON     \n [823] POLYGON      POLYGON     \n [825] POLYGON      POLYGON     \n [827] POLYGON      POLYGON     \n [829] POLYGON      POLYGON     \n [831] POLYGON      POLYGON     \n [833] POLYGON      POLYGON     \n [835] POLYGON      POLYGON     \n [837] POLYGON      POLYGON     \n [839] POLYGON      POLYGON     \n [841] POLYGON      POLYGON     \n [843] POLYGON      POLYGON     \n [845] POLYGON      POLYGON     ",
        "\n [847] POLYGON      POLYGON     \n [849] POLYGON      POLYGON     \n [851] POLYGON      POLYGON     \n [853] POLYGON      POLYGON     \n [855] POLYGON      POLYGON     \n [857] POLYGON      POLYGON     \n [859] POLYGON      MULTIPOLYGON\n [861] POLYGON      POLYGON     \n [863] POLYGON      POLYGON     \n [865] POLYGON      POLYGON     \n [867] POLYGON      POLYGON     \n [869] POLYGON      POLYGON     \n [871] POLYGON      POLYGON     \n [873] POLYGON      POLYGON     \n [875] MULTIPOLYGON MULTIPOLYGON\n [877] MULTIPOLYGON",
        " POLYGON     \n [879] POLYGON      POLYGON     \n [881] POLYGON      POLYGON     \n [883] POLYGON      POLYGON     \n [885] POLYGON      POLYGON     \n [887] POLYGON      POLYGON     \n [889] POLYGON      MULTIPOLYGON\n [891] POLYGON      POLYGON     \n [893] POLYGON      POLYGON     \n [895] POLYGON      POLYGON     \n [897] POLYGON      POLYGON     \n [899] POLYGON      POLYGON     \n [901] POLYGON      POLYGON     \n [903] POLYGON      POLYGON     \n [905] POLYGON      POLYGON     \n [907] POLYGON      POLYGON     \n [909]",
        " POLYGON      POLYGON     \n [911] POLYGON      POLYGON     \n [913] POLYGON      POLYGON     \n [915] POLYGON      MULTIPOLYGON\n [917] POLYGON      POLYGON     \n [919] POLYGON      POLYGON     \n [921] POLYGON      POLYGON     \n [923] POLYGON      POLYGON     \n [925] POLYGON      POLYGON     \n [927] MULTIPOLYGON POLYGON     \n [929] POLYGON      POLYGON     \n [931] POLYGON      POLYGON     \n [933] POLYGON      POLYGON     \n [935] POLYGON      POLYGON     \n [937] POLYGON      POLYGON     \n [939] POLYGON      POLYGON     ",
        "\n [941] POLYGON      POLYGON     \n [943] POLYGON      POLYGON     \n [945] POLYGON      POLYGON     \n [947] POLYGON      POLYGON     \n [949] POLYGON      POLYGON     \n [951] POLYGON      POLYGON     \n [953] POLYGON      POLYGON     \n [955] POLYGON      POLYGON     \n [957] POLYGON      POLYGON     \n [959] POLYGON      POLYGON     \n [961] POLYGON      POLYGON     \n [963] POLYGON      POLYGON     \n [965] POLYGON      POLYGON     \n [967] POLYGON      POLYGON     \n [969] POLYGON      MULTIPOLYGON\n [971] MULTIPOLYGON",
        " MULTIPOLYGON\n [973] POLYGON      POLYGON     \n [975] POLYGON      POLYGON     \n [977] POLYGON      POLYGON     \n [979] POLYGON      POLYGON     \n [981] POLYGON      POLYGON     \n [983] POLYGON      POLYGON     \n [985] POLYGON      POLYGON     \n [987] POLYGON      POLYGON     \n [989] POLYGON      POLYGON     \n [991] POLYGON      POLYGON     \n [993] POLYGON      POLYGON     \n [995] POLYGON      POLYGON     \n [997] POLYGON      POLYGON     \n [999] POLYGON      POLYGON     \n [ reached getOption(\"max.print\") -- omitted 26042 entries ]\n",
        "18 Levels: GEOMETRY POINT ... TRIANGLE\n",
        "> ",
        "st_geometry_type(adj.app) |> unique()",
        "[1] POLYGON      MULTIPOLYGON\n18 Levels: GEOMETRY POINT ... TRIANGLE\n",
        "> ",
        "debugonce(pa_apport_mass)",
        "> ",
        "  app.app <- pa_apport_mass(sf::st_geometry(adj.app),",
        "+ ",
        "                            adj.app$adj.mass)",
        "debugging in: pa_apport_mass(sf::st_geometry(adj.app), adj.app$adj.mass)\ndebug at /home/caio/Dropbox/pacu/R/yield_monitor.R#240: {\n    if (is.null(cell.size)) {\n        cell.size <- sqrt(mean(st_area(polygons)))\n        cell.size <- as.numeric(cell.size)\n    }\n    dat <- st_as_sf(polygons)\n    dat$mass <- mass.vector\n    app.grid <- st_make_grid(polygons, cellsize = rep(cell.size, \n        2))\n    w.out <- which(lengths(st_intersects(app.grid, dat)) == 0)\n    app.grid <- app.grid[-w.out]\n    apported <- suppressWarnings(st_interpolate_aw(dat[\"mass\"], \n",
        "        app.grid, extensive = FALSE))\n    return(apported)\n}\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#241: if (is.null(cell.size)) {\n    cell.size <- sqrt(mean(st_area(polygons)))\n    cell.size <- as.numeric(cell.size)\n}\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#242: cell.size <- sqrt(mean(st_area(polygons)))\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#243: cell.size <- as.numeric(cell.size)\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#245: dat <- st_as_sf(polygons)\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#246: dat$mass <- mass.vector\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#247: app.grid <- st_make_grid(polygons, cellsize = rep(cell.size, \n    2))\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#248: w.out <- which(lengths(st_intersects(app.grid, dat)) == 0)\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#249: app.grid <- app.grid[-w.out]\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#250: apported <- suppressWarnings(st_interpolate_aw(dat[\"mass\"], app.grid, \n    extensive = FALSE))\n",
        "Browse[2]> ",
        "",
        "Error in UseMethod(\"set_units\") : \n  no applicable method for 'set_units' applied to an object of class \"NULL\"\n",
        "> ",
        "debugonce(pa_apport_mass)",
        "> ",
        "debugonce(pa_apport_mass)",
        "> ",
        "  app.app <- pa_apport_mass(sf::st_geometry(adj.app),",
        "+ ",
        "                            adj.app$adj.mass)",
        "debugging in: pa_apport_mass(sf::st_geometry(adj.app), adj.app$adj.mass)\ndebug at /home/caio/Dropbox/pacu/R/yield_monitor.R#240: {\n    if (is.null(cell.size)) {\n        cell.size <- sqrt(mean(st_area(polygons)))\n        cell.size <- as.numeric(cell.size)\n    }\n    dat <- st_as_sf(polygons)\n    dat$mass <- mass.vector\n    app.grid <- st_make_grid(polygons, cellsize = rep(cell.size, \n        2))\n    w.out <- which(lengths(st_intersects(app.grid, dat)) == 0)\n    app.grid <- app.grid[-w.out]\n    apported <- suppressWarnings(st_interpolate_aw(dat[\"mass\"], \n",
        "        app.grid, extensive = FALSE))\n    return(apported)\n}\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#241: if (is.null(cell.size)) {\n    cell.size <- sqrt(mean(st_area(polygons)))\n    cell.size <- as.numeric(cell.size)\n}\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#242: cell.size <- sqrt(mean(st_area(polygons)))\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#243: cell.size <- as.numeric(cell.size)\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#245: dat <- st_as_sf(polygons)\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#246: dat$mass <- mass.vector\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#247: app.grid <- st_make_grid(polygons, cellsize = rep(cell.size, \n    2))\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#248: w.out <- which(lengths(st_intersects(app.grid, dat)) == 0)\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#249: app.grid <- app.grid[-w.out]\n",
        "Browse[2]> ",
        "",
        "debug at /home/caio/Dropbox/pacu/R/yield_monitor.R#250: apported <- suppressWarnings(st_interpolate_aw(dat[\"mass\"], app.grid, \n    extensive = FALSE))\n",
        "Browse[2]> ",
        "dat",
        "Simple feature collection with 27042 features and 1 field\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -90.31 ymin: 41.26635 xmax: -90.29593 ymax: 41.2733\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                                x\n1  POLYGON ((-90.30097 41.2731...\n2  POLYGON ((-90.30097 41.2731...\n3  POLYGON ((-90.30068 41.2731...\n4  POLYGON ((-90.30083 41.2731...\n5  MULTIPOLYGON (((-90.30079 4...\n6  MULTIPOLYGON (((-90.30079 4...\n7  MULTIPOLYGON (((-90.30087 4...\n8  MULTIPOLYGON (((-90.30068 4...",
        "\n9  POLYGON ((-90.30091 41.2731...\n10 POLYGON ((-90.30078 41.2731...\n              mass\n1  0.00000000 [lb]\n2  0.09260165 [lb]\n3  1.06941334 [lb]\n4  1.37183371 [lb]\n5  2.63182335 [lb]\n6  1.96463338 [lb]\n7  1.72484502 [lb]\n8  1.70740431 [lb]\n9  1.51759516 [lb]\n10 1.23186137 [lb]\n",
        "Browse[2]> ",
        "dat['mass']",
        "Simple feature collection with 27042 features and 1 field\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -90.31 ymin: 41.26635 xmax: -90.29593 ymax: 41.2733\nGeodetic CRS:  WGS 84\nFirst 10 features:\n              mass\n1  0.00000000 [lb]\n2  0.09260165 [lb]\n3  1.06941334 [lb]\n4  1.37183371 [lb]\n5  2.63182335 [lb]\n6  1.96463338 [lb]\n7  1.72484502 [lb]\n8  1.70740431 [lb]\n9  1.51759516 [lb]\n10 1.23186137 [lb]\n                                x\n1  POLYGON ((-90.30097 41.2731...\n2  POLYGON ((-90.30097 41.2731...",
        "\n3  POLYGON ((-90.30068 41.2731...\n4  POLYGON ((-90.30083 41.2731...\n5  MULTIPOLYGON (((-90.30079 4...\n6  MULTIPOLYGON (((-90.30079 4...\n7  MULTIPOLYGON (((-90.30087 4...\n8  MULTIPOLYGON (((-90.30068 4...\n9  POLYGON ((-90.30091 41.2731...\n10 POLYGON ((-90.30078 41.2731...\n",
        "Browse[2]> ",
        "app.grid",
        "Geometry set for 0 features \nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  WGS 84\n",
        "Browse[2]> ",
        "polygons",
        "Geometry set for 27042 features \nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -90.31 ymin: 41.26635 xmax: -90.29593 ymax: 41.2733\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n",
        "POLYGON ((-90.30097 41.27317, -90.30068 41.2731...\n",
        "POLYGON ((-90.30097 41.27317, -90.30072 41.2731...\n",
        "POLYGON ((-90.30068 41.27314, -90.30068 41.2731...\n",
        "POLYGON ((-90.30083 41.27314, -90.30079 41.2731...\n",
        "MULTIPOLYGON (((-90.30079 41.27314, -90.30083 4...\n",
        "Browse[2]> ",
        "st_make_grid(polygons, cellsize = rep(cell.size, 2))",
        "Geometry set for 1 feature \nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -90.31 ymin: 41.26635 xmax: -85.02875 ymax: 46.54759\nGeodetic CRS:  WGS 84\n",
        "POLYGON ((-90.31 41.26635, -85.02875 41.26635, ...\n",
        "Browse[2]> ",
        "st_make_grid(st_as_sf(polygons), cellsize = rep(cell.size, 2))",
        "Geometry set for 1 feature \nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -90.31 ymin: 41.26635 xmax: -85.02875 ymax: 46.54759\nGeodetic CRS:  WGS 84\n",
        "POLYGON ((-90.31 41.26635, -85.02875 41.26635, ...\n",
        "Browse[2]> ",
        "Browse[2]> ",
        "Q",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  app.n <- pa_2utm(app.n)",
        "Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : \n  invalid first argument\n",
        "Error in assign(cacheKey, frame, .rs.CachedDataEnv) : \n  attempt to use zero-length variable name\n",
        "> ",
        "app.n",
        "Simple feature collection with 30175 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 725333.1 ymin: 4571821 xmax: 726480.6 ymax: 4572599\nProjected CRS: WGS 84 / UTM zone 15N\nFirst 10 features:\n        Field\n1  Wirth Farm\n2  Wirth Farm\n3  Wirth Farm\n4  Wirth Farm\n5  Wirth Farm\n6  Wirth Farm\n7  Wirth Farm\n8  Wirth Farm\n9  Wirth Farm\n10 Wirth Farm\n                             Dataset\n1  2020_43021613_AsAppliedVRUrea.shp\n2  2020_43021613_AsAppliedVRUrea.shp\n3  2020_43021613_AsAppliedVRUrea.shp",
        "\n4  2020_43021613_AsAppliedVRUrea.shp\n5  2020_43021613_AsAppliedVRUrea.shp\n6  2020_43021613_AsAppliedVRUrea.shp\n7  2020_43021613_AsAppliedVRUrea.shp\n8  2020_43021613_AsAppliedVRUrea.shp\n9  2020_43021613_AsAppliedVRUrea.shp\n10 2020_43021613_AsAppliedVRUrea.shp\n   Product Obj__Id Distance_f Duration_s\n1     Urea       1     1.4013        0.2\n2     Urea       2     1.4013        0.2\n3     Urea       3     1.4670        0.2\n4     Urea       4     1.5326        0.2\n5     Urea       5     1.5326        0.2\n6     Urea",
        "       6     1.5982        0.2\n7     Urea       7     1.6966        0.2\n8     Urea       8     1.7294        0.2\n9     Urea       9     1.7622        0.2\n10    Urea      10     1.8278        0.2\n   Swth_Wdth_ Rt_Apd_Ms_ Tgt_Rate_l\n1          80     0.0000   219.5709\n2          80    10.2628   219.5709\n3          80   128.9918   219.5709\n4          80   171.2437   219.5709\n5          80   189.2542   219.5709\n6          80   182.2783   219.5709\n7          80   172.5651   219.5709\n8          80   174.4770   219.5709",
        "\n9          80   186.9693   219.5709\n10         80   182.4924   219.5709\n   Speed_mph_ Prod_ac_h_ Prdt_Amt\n1      4.7772    46.3238    0e+00\n2      4.7772    46.3238    0e+00\n3      5.0011    48.4957    2e-04\n4      5.2248    50.6643    2e-04\n5      5.2248    50.6643    3e-04\n6      5.4484    52.8328    3e-04\n7      5.7839    56.0857    3e-04\n8      5.8957    57.1700    3e-04\n9      6.0075    58.2543    3e-04\n10     6.2311    60.4229    3e-04\n   Rate__Mass Rate__Mass.1\n1      0.0000       0.0000\n2      4.7209",
        "       5.5419\n3     59.3362      69.6556\n4     78.7721      92.4716\n5     87.0569     102.1973\n6     83.8480      98.4303\n7     79.3799      93.1852\n8     80.2594      94.2176\n9     86.0059     100.9634\n10    83.9465      98.5459\n                   geometry\n1  POINT (726075.8 4572595)\n2  POINT (726075.9 4572595)\n3  POINT (726075.9 4572594)\n4  POINT (726075.9 4572594)\n5  POINT (726075.9 4572593)\n6    POINT (726076 4572593)\n7    POINT (726076 4572592)\n8  POINT (726076.1 4572592)\n9  POINT (726076.1 4572591)\n10",
        " POINT (726076.1 4572591)\n",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  app.n <- pa_2utm(app.n)",
        "> ",
        "  ## testing how to aggregate the nitrogen and seed information",
        "> ",
        "  app.n <- pa_2utm(app.n, verbose = TRUE)",
        "Current CRS is already UTM\n",
        "> ",
        "  flow <- app.n[['Rate__Mass']]",
        "> ",
        "  units(flow) <- units::as_units('lb/s')",
        "> ",
        "  moisture <- 0",
        "> ",
        "  units(moisture) <- units::as_units('%')",
        "> ",
        "  interval <- app.n[['Duration_s']]",
        "> ",
        "  units(interval) <- units::as_units('s')",
        "> ",
        "  f.mass <- pa_flow2mass(flow, interval, moisture)",
        "> ",
        "  swath <- app.n[['Swth_Wdth_']]",
        "> ",
        "  units(swath) <- units::as_units('ft')",
        "> ",
        "  units(swath) <- units::as_units('m')",
        "> ",
        "  distance <- app.n[['Distance_f']]",
        "> ",
        "  units(distance) <- units::as_units('ft')",
        "> ",
        "  units(distance) <- units::as_units('m')",
        "> ",
        "  angle <- .pa_estimate_angle(st_geometry(app.n))",
        "> ",
        "  app.pols <- pa_make_vehicle_polygons(sf::st_geometry(app.n),",
        "+ ",
        "                                           swath,",
        "+ ",
        "                                           distance,",
        "+ ",
        "                                           angle,",
        "+ ",
        "                                           cores = cores)",
        "Error in checkForRemoteErrors(val) : \n  8 nodes produced errors; first error: both operands of the expression should be \"units\" objects\n",
        "\nRestarting R session...\n\n"
    ]
}